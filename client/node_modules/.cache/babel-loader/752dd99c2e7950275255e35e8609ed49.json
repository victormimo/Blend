{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n\nvar detectSilentVideo = require('../../util/detectsilentvideo');\n\nvar mixinLocalMediaTrack = require('./localmediatrack');\n\nvar VideoTrack = require('./videotrack');\n\nvar LocalMediaVideoTrack = mixinLocalMediaTrack(VideoTrack);\n/**\n * A {@link LocalVideoTrack} is a {@link VideoTrack} representing video that\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\n * enabled and disabled with {@link LocalVideoTrack#enable} and\n * {@link LocalVideoTrack#disable} or stopped completely with\n * {@link LocalVideoTrack#stop}.\n * @extends VideoTrack\n * @property {Track.ID} id - The {@link LocalVideoTrack}'s ID\n * @property {boolean} isStopped - Whether or not the {@link LocalVideoTrack} is\n *   stopped\n * @emits LocalVideoTrack#disabled\n * @emits LocalVideoTrack#enabled\n * @emits LocalVideoTrack#started\n * @emits LocalVideoTrack#stopped\n */\n\nvar LocalVideoTrack = function (_LocalMediaVideoTrack) {\n  _inherits(LocalVideoTrack, _LocalMediaVideoTrack);\n  /**\n   * Construct a {@link LocalVideoTrack} from a MediaStreamTrack.\n   * @param {MediaStreamTrack} mediaStreamTrack - The underlying MediaStreamTrack\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\n   */\n\n\n  function LocalVideoTrack(mediaStreamTrack, options) {\n    _classCallCheck(this, LocalVideoTrack);\n\n    options = Object.assign({\n      workaroundSilentLocalVideo: guessBrowser() === 'safari' && typeof document !== 'undefined' && typeof document.createElement === 'function'\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (LocalVideoTrack.__proto__ || Object.getPrototypeOf(LocalVideoTrack)).call(this, mediaStreamTrack, options));\n\n    Object.defineProperties(_this, {\n      _workaroundSilentLocalVideo: {\n        value: options.workaroundSilentLocalVideo ? workaroundSilentLocalVideo : null\n      },\n      _workaroundSilentLocalVideoCleanup: {\n        value: null,\n        writable: true\n      }\n    }); // NOTE(mmalavalli): In iOS Safari, we work around a bug where local video\n    // MediaStreamTracks are silent (even though they are enabled, live and unmuted)\n    // after accepting/rejecting a phone call.\n\n    if (_this._workaroundSilentLocalVideo) {\n      _this._workaroundSilentLocalVideoCleanup = _this._workaroundSilentLocalVideo(_this, document);\n    }\n\n    return _this;\n  }\n\n  _createClass(LocalVideoTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalVideoTrack #' + this._instanceId + ': ' + this.id + ']';\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_canCaptureFrames',\n    value: function _canCaptureFrames() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), '_canCaptureFrames', this).call(this, this._trackSender.isPublishing);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), '_end', this).apply(this, arguments);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_setSenderMediaStreamTrack',\n    value: function _setSenderMediaStreamTrack(useProcessed) {\n      var _this2 = this;\n\n      var unprocessedTrack = this.mediaStreamTrack;\n      var mediaStreamTrack = useProcessed ? this.processedTrack : unprocessedTrack;\n      return this._trackSender.setMediaStreamTrack(mediaStreamTrack).catch(function (error) {\n        return _this2._log.warn('setMediaStreamTrack failed on LocalVideoTrack RTCRtpSender', {\n          error: error,\n          mediaStreamTrack: mediaStreamTrack\n        });\n      }).then(function () {\n        _this2._unprocessedTrack = useProcessed ? unprocessedTrack : null;\n      });\n    }\n    /**\n     * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n     * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.outputFrame = new OffscreenCanvas(0, 0);\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrame) {\n     *     this.outputFrame.width = inputFrame.width;\n     *     this.outputFrame.height = inputFrame.height;\n     *\n     *     const context = this.outputFrame.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrame, 0, 0, inputFrame.width, inputFrame.height);\n     *     return this.outputFrame;\n     *   }\n     * }\n     *\n     * const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     * localVideoTrack.addProcessor(new GrayScaleProcessor(100));\n     */\n\n  }, {\n    key: 'addProcessor',\n    value: function addProcessor() {\n      this._log.debug('Adding VideoProcessor to the LocalVideoTrack');\n\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'addProcessor', this).apply(this, arguments);\n\n      if (!this.processedTrack) {\n        return this._log.warn('Unable to add a VideoProcessor to the LocalVideoTrack');\n      }\n\n      this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the processed MediaStreamTrack', this.processedTrack);\n\n      this._setSenderMediaStreamTrack(true);\n\n      return result;\n    }\n    /**\n     * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.outputFrame = new OffscreenCanvas(0, 0);\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrame) {\n     *     this.outputFrame.width = inputFrame.width;\n     *     this.outputFrame.height = inputFrame.height;\n     *\n     *     const context = this.outputFrame.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrame, 0, 0, inputFrame.width, inputFrame.height);\n     *     return this.outputFrame;\n     *   }\n     * }\n     *\n     * const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     * const grayScaleProcessor = new GrayScaleProcessor(100);\n     * localVideoTrack.addProcessor(grayScaleProcessor);\n     *\n     * document.getElementById('remove-button').onclick = () => localVideoTrack.removeProcessor(grayScaleProcessor);\n     */\n\n  }, {\n    key: 'removeProcessor',\n    value: function removeProcessor() {\n      var _this3 = this;\n\n      this._log.debug('Removing VideoProcessor from the LocalVideoTrack');\n\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'removeProcessor', this).apply(this, arguments);\n\n      this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the original MediaStreamTrack');\n\n      this._setSenderMediaStreamTrack().then(function () {\n        return _this3._updateElementsMediaStreamTrack();\n      });\n\n      return result;\n    }\n    /**\n     * Disable the {@link LocalVideoTrack}. This is effectively \"pause\".\n     * If a {@link VideoProcessor} is added, then `processedTrack` is disabled as well.\n     * @returns {this}\n     * @fires VideoTrack#disabled\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'disable', this).apply(this, arguments);\n\n      if (this.processedTrack) {\n        this.processedTrack.enabled = false;\n      }\n\n      return result;\n    }\n    /**\n     * Enable the {@link LocalVideoTrack}. This is effectively \"unpause\".\n     * If a {@link VideoProcessor} is added, then `processedTrack` is enabled as well.\n     * @returns {this}\n     * @fires VideoTrack#enabled\n    */\n\n    /**\n    * Enable or disable the {@link LocalVideoTrack}. This is effectively \"unpause\"\n    * or \"pause\". If a {@link VideoProcessor} is added,\n    * then `processedTrack` is enabled or disabled as well.\n    * @param {boolean} [enabled] - Specify false to pause the\n    *   {@link LocalVideoTrack}\n    * @returns {this}\n    * @fires VideoTrack#disabled\n    * @fires VideoTrack#enabled\n    */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'enable', this).apply(this, arguments);\n\n      if (this.processedTrack) {\n        this.processedTrack.enabled = enabled;\n\n        if (enabled) {\n          this._captureFrames();\n\n          this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the processed MediaStreamTrack', this.processedTrack);\n\n          this._setSenderMediaStreamTrack(true);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Restart the {@link LocalVideoTrack}. This stops the existing MediaStreamTrack\n     * and creates a new MediaStreamTrack. If the {@link LocalVideoTrack} is being published\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\n     * the {@link LocalVideoTrack}'s ID is no longer guaranteed to be the same as the\n     * underlying MediaStreamTrack's ID.\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n     *   for restarting the {@link LocalVideoTrack}; If not specified, then the current MediaTrackConstraints\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\n     *   will be used\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalVideoTrack} was not created\n     *   using an one of <code>createLocalVideoTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\n     *   raised by <code>getUserMedia</code> when it fails\n     * @fires LocalVideoTrack#stopped\n     * @fires LocalVideoTrack#started\n     * @example\n     * const { connect, createLocalVideoTrack } = require('twilio-video');\n     *\n     * // Create a LocalVideoTrack that captures video from the front-facing camera.\n     * createLocalVideoTrack({ facingMode: 'user' }).then(function(localVideoTrack) {\n     *   return connect('token', {\n     *     name: 'my-cool-room',\n     *     tracks: [localVideoTrack]\n     *   });\n     * }).then(function(room) {\n     *   // Restart the LocalVideoTrack to capture video from the back-facing camera.\n     *   const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     *   return localVideoTrack.restart({ facingMode: 'environment' });\n     * });\n     */\n\n  }, {\n    key: 'restart',\n    value: function restart() {\n      var _this4 = this;\n\n      if (this._workaroundSilentLocalVideoCleanup) {\n        this._workaroundSilentLocalVideoCleanup();\n\n        this._workaroundSilentLocalVideoCleanup = null;\n      }\n\n      var promise = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'restart', this).apply(this, arguments);\n\n      if (this.processor) {\n        promise.then(function () {\n          _this4._restartProcessor();\n        });\n      }\n\n      if (this._workaroundSilentLocalVideo) {\n        promise.finally(function () {\n          _this4._workaroundSilentLocalVideoCleanup = _this4._workaroundSilentLocalVideo(_this4, document);\n        });\n      }\n\n      return promise;\n    }\n    /**\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\n     * {@link LocalVideoTrack}, you should unpublish it after stopping.\n     * @returns {this}\n     * @fires LocalVideoTrack#stopped\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this._workaroundSilentLocalVideoCleanup) {\n        this._workaroundSilentLocalVideoCleanup();\n\n        this._workaroundSilentLocalVideoCleanup = null;\n      }\n\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'stop', this).apply(this, arguments);\n    }\n  }]);\n\n  return LocalVideoTrack;\n}(LocalMediaVideoTrack);\n/**\n * Work around a bug where local video MediaStreamTracks are silent (even though\n * they are enabled, live and unmuted) after accepting/rejecting a phone call.\n * @private\n * @param {LocalVideoTrack} localVideoTrack\n * @param {HTMLDocument} doc\n * @returns {function} Cleans up listeners attached by the workaround\n */\n\n\nfunction workaroundSilentLocalVideo(localVideoTrack, doc) {\n  var log = localVideoTrack._log;\n  var el = localVideoTrack._dummyEl,\n      mediaStreamTrack = localVideoTrack.mediaStreamTrack;\n\n  function onUnmute() {\n    if (!localVideoTrack.isEnabled) {\n      return;\n    }\n\n    log.info('Unmuted, checking silence'); // The dummy element is paused, so play it and then detect silence.\n\n    el.play().then(function () {\n      return detectSilentVideo(el, doc);\n    }).then(function (isSilent) {\n      if (!isSilent) {\n        log.info('Non-silent frames detected, so no need to restart');\n        return;\n      }\n\n      log.warn('Silence detected, restarting'); // NOTE(mmalavalli): If we try and restart a silent MediaStreamTrack\n      // without stopping it first, then a NotReadableError is raised. Hence,\n      // we stop the MediaStreamTrack here.\n\n      localVideoTrack._stop(); // Restart the LocalVideoTrack.\n      // eslint-disable-next-line consistent-return\n\n\n      return localVideoTrack._restart();\n    }).catch(function (error) {\n      log.warn('Failed to detect silence and restart:', error);\n    }).finally(function () {\n      // If silent frames were not detected, then pause the dummy element again.\n      el = localVideoTrack._dummyEl;\n\n      if (!el.paused) {\n        el.pause();\n      } // Reset the unmute handler.\n\n\n      mediaStreamTrack.removeEventListener('unmute', onUnmute);\n      mediaStreamTrack = localVideoTrack.mediaStreamTrack;\n      mediaStreamTrack.addEventListener('unmute', onUnmute);\n    });\n  } // Set the unmute handler.\n\n\n  mediaStreamTrack.addEventListener('unmute', onUnmute);\n  return function () {\n    mediaStreamTrack.removeEventListener('unmute', onUnmute);\n  };\n}\n/**\n * The {@link LocalVideoTrack} was disabled, i.e. \"muted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was\n *   disabled\n * @event LocalVideoTrack#disabled\n */\n\n/**\n * The {@link LocalVideoTrack} was enabled, i.e. \"unmuted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was enabled\n * @event LocalVideoTrack#enabled\n */\n\n/**\n * The {@link LocalVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that started\n * @event LocalVideoTrack#started\n */\n\n/**\n * The {@link LocalVideoTrack} stopped, either because {@link LocalVideoTrack#stop}\n * or {@link LocalVideoTrack#restart} was called or because the underlying\n * MediaStreamTrack ended.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that stopped\n * @event LocalVideoTrack#stopped\n */\n\n\nmodule.exports = LocalVideoTrack;","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/twilio-video/es5/media/track/localvideotrack.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_require","require","guessBrowser","detectSilentVideo","mixinLocalMediaTrack","VideoTrack","LocalMediaVideoTrack","LocalVideoTrack","_LocalMediaVideoTrack","mediaStreamTrack","options","assign","workaroundSilentLocalVideo","document","createElement","_this","_workaroundSilentLocalVideo","_workaroundSilentLocalVideoCleanup","toString","_instanceId","id","_canCaptureFrames","_trackSender","isPublishing","_end","apply","arguments","_setSenderMediaStreamTrack","useProcessed","_this2","unprocessedTrack","processedTrack","setMediaStreamTrack","catch","error","_log","warn","then","_unprocessedTrack","addProcessor","debug","result","removeProcessor","_this3","_updateElementsMediaStreamTrack","disable","enabled","enable","_captureFrames","restart","_this4","promise","processor","_restartProcessor","finally","stop","localVideoTrack","doc","log","el","_dummyEl","onUnmute","isEnabled","info","play","isSilent","_stop","_restart","paused","pause","removeEventListener","addEventListener","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('@twilio/webrtc/lib/util'),\n    guessBrowser = _require.guessBrowser;\n\nvar detectSilentVideo = require('../../util/detectsilentvideo');\nvar mixinLocalMediaTrack = require('./localmediatrack');\nvar VideoTrack = require('./videotrack');\n\nvar LocalMediaVideoTrack = mixinLocalMediaTrack(VideoTrack);\n\n/**\n * A {@link LocalVideoTrack} is a {@link VideoTrack} representing video that\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\n * enabled and disabled with {@link LocalVideoTrack#enable} and\n * {@link LocalVideoTrack#disable} or stopped completely with\n * {@link LocalVideoTrack#stop}.\n * @extends VideoTrack\n * @property {Track.ID} id - The {@link LocalVideoTrack}'s ID\n * @property {boolean} isStopped - Whether or not the {@link LocalVideoTrack} is\n *   stopped\n * @emits LocalVideoTrack#disabled\n * @emits LocalVideoTrack#enabled\n * @emits LocalVideoTrack#started\n * @emits LocalVideoTrack#stopped\n */\n\nvar LocalVideoTrack = function (_LocalMediaVideoTrack) {\n  _inherits(LocalVideoTrack, _LocalMediaVideoTrack);\n\n  /**\n   * Construct a {@link LocalVideoTrack} from a MediaStreamTrack.\n   * @param {MediaStreamTrack} mediaStreamTrack - The underlying MediaStreamTrack\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\n   */\n  function LocalVideoTrack(mediaStreamTrack, options) {\n    _classCallCheck(this, LocalVideoTrack);\n\n    options = Object.assign({\n      workaroundSilentLocalVideo: guessBrowser() === 'safari' && typeof document !== 'undefined' && typeof document.createElement === 'function'\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (LocalVideoTrack.__proto__ || Object.getPrototypeOf(LocalVideoTrack)).call(this, mediaStreamTrack, options));\n\n    Object.defineProperties(_this, {\n      _workaroundSilentLocalVideo: {\n        value: options.workaroundSilentLocalVideo ? workaroundSilentLocalVideo : null\n      },\n      _workaroundSilentLocalVideoCleanup: {\n        value: null,\n        writable: true\n      }\n    });\n\n    // NOTE(mmalavalli): In iOS Safari, we work around a bug where local video\n    // MediaStreamTracks are silent (even though they are enabled, live and unmuted)\n    // after accepting/rejecting a phone call.\n    if (_this._workaroundSilentLocalVideo) {\n      _this._workaroundSilentLocalVideoCleanup = _this._workaroundSilentLocalVideo(_this, document);\n    }\n    return _this;\n  }\n\n  _createClass(LocalVideoTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalVideoTrack #' + this._instanceId + ': ' + this.id + ']';\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_canCaptureFrames',\n    value: function _canCaptureFrames() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), '_canCaptureFrames', this).call(this, this._trackSender.isPublishing);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), '_end', this).apply(this, arguments);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_setSenderMediaStreamTrack',\n    value: function _setSenderMediaStreamTrack(useProcessed) {\n      var _this2 = this;\n\n      var unprocessedTrack = this.mediaStreamTrack;\n      var mediaStreamTrack = useProcessed ? this.processedTrack : unprocessedTrack;\n\n      return this._trackSender.setMediaStreamTrack(mediaStreamTrack).catch(function (error) {\n        return _this2._log.warn('setMediaStreamTrack failed on LocalVideoTrack RTCRtpSender', { error: error, mediaStreamTrack: mediaStreamTrack });\n      }).then(function () {\n        _this2._unprocessedTrack = useProcessed ? unprocessedTrack : null;\n      });\n    }\n\n    /**\n     * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n     * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.outputFrame = new OffscreenCanvas(0, 0);\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrame) {\n     *     this.outputFrame.width = inputFrame.width;\n     *     this.outputFrame.height = inputFrame.height;\n     *\n     *     const context = this.outputFrame.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrame, 0, 0, inputFrame.width, inputFrame.height);\n     *     return this.outputFrame;\n     *   }\n     * }\n     *\n     * const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     * localVideoTrack.addProcessor(new GrayScaleProcessor(100));\n     */\n\n  }, {\n    key: 'addProcessor',\n    value: function addProcessor() {\n      this._log.debug('Adding VideoProcessor to the LocalVideoTrack');\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'addProcessor', this).apply(this, arguments);\n\n      if (!this.processedTrack) {\n        return this._log.warn('Unable to add a VideoProcessor to the LocalVideoTrack');\n      }\n\n      this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the processed MediaStreamTrack', this.processedTrack);\n      this._setSenderMediaStreamTrack(true);\n\n      return result;\n    }\n\n    /**\n     * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n     * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n     * @returns {this}\n     * @example\n     * class GrayScaleProcessor {\n     *   constructor(percentage) {\n     *     this.outputFrame = new OffscreenCanvas(0, 0);\n     *     this.percentage = percentage;\n     *   }\n     *   processFrame(inputFrame) {\n     *     this.outputFrame.width = inputFrame.width;\n     *     this.outputFrame.height = inputFrame.height;\n     *\n     *     const context = this.outputFrame.getContext('2d');\n     *     context.filter = `grayscale(${this.percentage}%)`;\n     *     context.drawImage(inputFrame, 0, 0, inputFrame.width, inputFrame.height);\n     *     return this.outputFrame;\n     *   }\n     * }\n     *\n     * const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     * const grayScaleProcessor = new GrayScaleProcessor(100);\n     * localVideoTrack.addProcessor(grayScaleProcessor);\n     *\n     * document.getElementById('remove-button').onclick = () => localVideoTrack.removeProcessor(grayScaleProcessor);\n     */\n\n  }, {\n    key: 'removeProcessor',\n    value: function removeProcessor() {\n      var _this3 = this;\n\n      this._log.debug('Removing VideoProcessor from the LocalVideoTrack');\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'removeProcessor', this).apply(this, arguments);\n\n      this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the original MediaStreamTrack');\n      this._setSenderMediaStreamTrack().then(function () {\n        return _this3._updateElementsMediaStreamTrack();\n      });\n\n      return result;\n    }\n\n    /**\n     * Disable the {@link LocalVideoTrack}. This is effectively \"pause\".\n     * If a {@link VideoProcessor} is added, then `processedTrack` is disabled as well.\n     * @returns {this}\n     * @fires VideoTrack#disabled\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'disable', this).apply(this, arguments);\n      if (this.processedTrack) {\n        this.processedTrack.enabled = false;\n      }\n      return result;\n    }\n\n    /**\n     * Enable the {@link LocalVideoTrack}. This is effectively \"unpause\".\n     * If a {@link VideoProcessor} is added, then `processedTrack` is enabled as well.\n     * @returns {this}\n     * @fires VideoTrack#enabled\n    */ /**\n       * Enable or disable the {@link LocalVideoTrack}. This is effectively \"unpause\"\n       * or \"pause\". If a {@link VideoProcessor} is added,\n       * then `processedTrack` is enabled or disabled as well.\n       * @param {boolean} [enabled] - Specify false to pause the\n       *   {@link LocalVideoTrack}\n       * @returns {this}\n       * @fires VideoTrack#disabled\n       * @fires VideoTrack#enabled\n       */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var result = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'enable', this).apply(this, arguments);\n      if (this.processedTrack) {\n        this.processedTrack.enabled = enabled;\n\n        if (enabled) {\n          this._captureFrames();\n          this._log.debug('Updating LocalVideoTrack\\'s MediaStreamTrack with the processed MediaStreamTrack', this.processedTrack);\n          this._setSenderMediaStreamTrack(true);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Restart the {@link LocalVideoTrack}. This stops the existing MediaStreamTrack\n     * and creates a new MediaStreamTrack. If the {@link LocalVideoTrack} is being published\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\n     * the {@link LocalVideoTrack}'s ID is no longer guaranteed to be the same as the\n     * underlying MediaStreamTrack's ID.\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\n     *   for restarting the {@link LocalVideoTrack}; If not specified, then the current MediaTrackConstraints\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\n     *   will be used\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalVideoTrack} was not created\n     *   using an one of <code>createLocalVideoTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\n     *   raised by <code>getUserMedia</code> when it fails\n     * @fires LocalVideoTrack#stopped\n     * @fires LocalVideoTrack#started\n     * @example\n     * const { connect, createLocalVideoTrack } = require('twilio-video');\n     *\n     * // Create a LocalVideoTrack that captures video from the front-facing camera.\n     * createLocalVideoTrack({ facingMode: 'user' }).then(function(localVideoTrack) {\n     *   return connect('token', {\n     *     name: 'my-cool-room',\n     *     tracks: [localVideoTrack]\n     *   });\n     * }).then(function(room) {\n     *   // Restart the LocalVideoTrack to capture video from the back-facing camera.\n     *   const localVideoTrack = Array.from(room.localParticipant.videoTracks.values())[0].track;\n     *   return localVideoTrack.restart({ facingMode: 'environment' });\n     * });\n     */\n\n  }, {\n    key: 'restart',\n    value: function restart() {\n      var _this4 = this;\n\n      if (this._workaroundSilentLocalVideoCleanup) {\n        this._workaroundSilentLocalVideoCleanup();\n        this._workaroundSilentLocalVideoCleanup = null;\n      }\n\n      var promise = _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'restart', this).apply(this, arguments);\n      if (this.processor) {\n        promise.then(function () {\n          _this4._restartProcessor();\n        });\n      }\n\n      if (this._workaroundSilentLocalVideo) {\n        promise.finally(function () {\n          _this4._workaroundSilentLocalVideoCleanup = _this4._workaroundSilentLocalVideo(_this4, document);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\n     * {@link LocalVideoTrack}, you should unpublish it after stopping.\n     * @returns {this}\n     * @fires LocalVideoTrack#stopped\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this._workaroundSilentLocalVideoCleanup) {\n        this._workaroundSilentLocalVideoCleanup();\n        this._workaroundSilentLocalVideoCleanup = null;\n      }\n      return _get(LocalVideoTrack.prototype.__proto__ || Object.getPrototypeOf(LocalVideoTrack.prototype), 'stop', this).apply(this, arguments);\n    }\n  }]);\n\n  return LocalVideoTrack;\n}(LocalMediaVideoTrack);\n\n/**\n * Work around a bug where local video MediaStreamTracks are silent (even though\n * they are enabled, live and unmuted) after accepting/rejecting a phone call.\n * @private\n * @param {LocalVideoTrack} localVideoTrack\n * @param {HTMLDocument} doc\n * @returns {function} Cleans up listeners attached by the workaround\n */\n\n\nfunction workaroundSilentLocalVideo(localVideoTrack, doc) {\n  var log = localVideoTrack._log;\n  var el = localVideoTrack._dummyEl,\n      mediaStreamTrack = localVideoTrack.mediaStreamTrack;\n\n\n  function onUnmute() {\n    if (!localVideoTrack.isEnabled) {\n      return;\n    }\n    log.info('Unmuted, checking silence');\n\n    // The dummy element is paused, so play it and then detect silence.\n    el.play().then(function () {\n      return detectSilentVideo(el, doc);\n    }).then(function (isSilent) {\n      if (!isSilent) {\n        log.info('Non-silent frames detected, so no need to restart');\n        return;\n      }\n      log.warn('Silence detected, restarting');\n\n      // NOTE(mmalavalli): If we try and restart a silent MediaStreamTrack\n      // without stopping it first, then a NotReadableError is raised. Hence,\n      // we stop the MediaStreamTrack here.\n      localVideoTrack._stop();\n\n      // Restart the LocalVideoTrack.\n      // eslint-disable-next-line consistent-return\n      return localVideoTrack._restart();\n    }).catch(function (error) {\n      log.warn('Failed to detect silence and restart:', error);\n    }).finally(function () {\n      // If silent frames were not detected, then pause the dummy element again.\n      el = localVideoTrack._dummyEl;\n      if (!el.paused) {\n        el.pause();\n      }\n\n      // Reset the unmute handler.\n      mediaStreamTrack.removeEventListener('unmute', onUnmute);\n      mediaStreamTrack = localVideoTrack.mediaStreamTrack;\n      mediaStreamTrack.addEventListener('unmute', onUnmute);\n    });\n  }\n\n  // Set the unmute handler.\n  mediaStreamTrack.addEventListener('unmute', onUnmute);\n\n  return function () {\n    mediaStreamTrack.removeEventListener('unmute', onUnmute);\n  };\n}\n\n/**\n * The {@link LocalVideoTrack} was disabled, i.e. \"muted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was\n *   disabled\n * @event LocalVideoTrack#disabled\n */\n\n/**\n * The {@link LocalVideoTrack} was enabled, i.e. \"unmuted\".\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that was enabled\n * @event LocalVideoTrack#enabled\n */\n\n/**\n * The {@link LocalVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that started\n * @event LocalVideoTrack#started\n */\n\n/**\n * The {@link LocalVideoTrack} stopped, either because {@link LocalVideoTrack#stop}\n * or {@link LocalVideoTrack#restart} was called or because the underlying\n * MediaStreamTrack ended.\n * @param {LocalVideoTrack} track - The {@link LocalVideoTrack} that stopped\n * @event LocalVideoTrack#stopped\n */\n\nmodule.exports = LocalVideoTrack;"]},"metadata":{},"sourceType":"script"}