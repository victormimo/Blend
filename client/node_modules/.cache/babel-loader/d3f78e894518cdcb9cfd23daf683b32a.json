{"ast":null,"code":"import { __rest, __assign, __read } from 'tslib';\nimport { axisBox } from '../utils/geometry/index.js';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.js';\nimport { animateVisualElement } from '../render/utils/animation.js';\nimport { visualElement } from '../render/index.js';\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\nvar stateVisualElement = visualElement({\n  createRenderState: function () {\n    return {};\n  },\n  build: function () {},\n  measureViewportBox: axisBox,\n  resetTransform: function () {},\n  restoreTransform: function () {},\n  removeValueFromMutableState: function () {},\n  render: function () {},\n  scrapeMotionValuesFromProps: function () {\n    return {};\n  },\n  readValueFromInstance: function (_state, key, options) {\n    return options.initialState[key] || 0;\n  },\n  makeTargetAnimatable: function (element, _a) {\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return __assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  }\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n * @internal\n */\n\nfunction useAnimatedState(initialState) {\n  var _a = __read(useState(initialState), 2),\n      animationState = _a[0],\n      setAnimationState = _a[1];\n\n  var element = useConstant(function () {\n    return stateVisualElement({\n      props: {}\n    }, {\n      initialState: initialState\n    });\n  });\n  useEffect(function () {\n    element.ref({});\n    return function () {\n      return element.ref(null);\n    };\n  }, []);\n  useEffect(function () {\n    element.setProps({\n      onUpdate: function (v) {\n        return setAnimationState(__assign({}, v));\n      }\n    });\n  });\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/animation/use-animated-state.js"],"names":["__rest","__assign","__read","axisBox","getOrigin","checkTargetForNewValues","animateVisualElement","visualElement","useState","useEffect","useConstant","stateVisualElement","createRenderState","build","measureViewportBox","resetTransform","restoreTransform","removeValueFromMutableState","render","scrapeMotionValuesFromProps","readValueFromInstance","_state","key","options","initialState","makeTargetAnimatable","element","_a","transition","transitionEnd","target","origin","useAnimatedState","animationState","setAnimationState","props","ref","setProps","onUpdate","v","startAnimation","animationDefinition"],"mappings":"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","sourcesContent":["import { __rest, __assign, __read } from 'tslib';\nimport { axisBox } from '../utils/geometry/index.js';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.js';\nimport { animateVisualElement } from '../render/utils/animation.js';\nimport { visualElement } from '../render/index.js';\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.js';\n\nvar stateVisualElement = visualElement({\n    createRenderState: function () { return ({}); },\n    build: function () { },\n    measureViewportBox: axisBox,\n    resetTransform: function () { },\n    restoreTransform: function () { },\n    removeValueFromMutableState: function () { },\n    render: function () { },\n    scrapeMotionValuesFromProps: function () {\n        return {};\n    },\n    readValueFromInstance: function (_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable: function (element, _a) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return __assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n * @internal\n */\nfunction useAnimatedState(initialState) {\n    var _a = __read(useState(initialState), 2), animationState = _a[0], setAnimationState = _a[1];\n    var element = useConstant(function () {\n        return stateVisualElement({ props: {} }, { initialState: initialState });\n    });\n    useEffect(function () {\n        element.ref({});\n        return function () { return element.ref(null); };\n    }, []);\n    useEffect(function () {\n        element.setProps({\n            onUpdate: function (v) { return setAnimationState(__assign({}, v)); },\n        });\n    });\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\n        return animateVisualElement(element, animationDefinition);\n    }; });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"]},"metadata":{},"sourceType":"module"}