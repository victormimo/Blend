{"ast":null,"code":"/* eslint new-cap:0 */\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar defaultGetLogger = require('../vendor/loglevel').getLogger;\n\nvar constants = require('./constants');\n\nvar DEFAULT_LOG_LEVEL = constants.DEFAULT_LOG_LEVEL,\n    DEFAULT_LOGGER_NAME = constants.DEFAULT_LOGGER_NAME;\n\nvar E = require('./constants').typeErrors;\n\nvar deprecationWarningsByComponentConstructor = void 0;\n\nfunction getDeprecationWarnings(componentConstructor) {\n  deprecationWarningsByComponentConstructor = deprecationWarningsByComponentConstructor || new Map();\n\n  if (deprecationWarningsByComponentConstructor.has(componentConstructor)) {\n    return deprecationWarningsByComponentConstructor.get(componentConstructor);\n  }\n\n  var deprecationWarnings = new Set();\n  deprecationWarningsByComponentConstructor.set(componentConstructor, deprecationWarnings);\n  return deprecationWarnings;\n}\n/**\n * Selectively outputs messages to console based on specified minimum module\n * specific log levels.\n *\n * NOTE: The values in the logLevels object passed to the constructor is changed\n *       by subsequent calls to {@link Log#setLevels}.\n */\n\n\nvar Log = function () {\n  /**\n   * Construct a new {@link Log} object.\n   * @param {String} moduleName - Name of the logging module (webrtc/media/signaling)\n   * @param {object} component - Component owning this instance of {@link Log}\n   * @param {LogLevels} logLevels - Logging levels. See {@link LogLevels}\n   * @param {String} loggerName - Name of the logger instance. Used when calling getLogger from loglevel module\n   */\n  function Log(moduleName, component, logLevels, loggerName, getLogger) {\n    _classCallCheck(this, Log);\n\n    if (typeof moduleName !== 'string') {\n      throw E.INVALID_TYPE('moduleName', 'string');\n    }\n\n    if (!component) {\n      throw E.REQUIRED_ARGUMENT('component');\n    }\n\n    if ((typeof logLevels === 'undefined' ? 'undefined' : _typeof(logLevels)) !== 'object') {\n      logLevels = {};\n    }\n\n    getLogger = getLogger || defaultGetLogger;\n    validateLogLevels(logLevels);\n    /* istanbul ignore next */\n\n    Object.defineProperties(this, {\n      _component: {\n        value: component\n      },\n      _logLevels: {\n        value: logLevels\n      },\n      _warnings: {\n        value: new Set()\n      },\n      _loggerName: {\n        get: function get() {\n          var name = loggerName && typeof loggerName === 'string' ? loggerName : DEFAULT_LOGGER_NAME;\n\n          if (!this._logLevelsEqual) {\n            name = name + '-' + moduleName;\n          }\n\n          return name;\n        }\n      },\n      _logger: {\n        get: function get() {\n          var logger = getLogger(this._loggerName);\n          var level = this._logLevels[moduleName] || DEFAULT_LOG_LEVEL; // There is no 'off' in the logger module. It uses 'silent' instead\n\n          level = level === 'off' ? 'silent' : level;\n          logger.setDefaultLevel(level);\n          return logger;\n        }\n      },\n      _logLevelsEqual: {\n        get: function get() {\n          // True if all levels are the same\n          return new Set(Object.values(this._logLevels)).size === 1;\n        }\n      },\n      logLevel: {\n        get: function get() {\n          return Log.getLevelByName(logLevels[moduleName] || DEFAULT_LOG_LEVEL);\n        }\n      },\n      name: {\n        get: component.toString.bind(component)\n      }\n    });\n  }\n  /**\n   * Get the log level (number) by its name (string)\n   * @param {String} name - Name of the log level\n   * @returns {Number} Requested log level\n   * @throws {TwilioError} INVALID_LOG_LEVEL (32056)\n   * @public\n   */\n\n\n  _createClass(Log, [{\n    key: 'createLog',\n\n    /**\n     * Create a child {@link Log} instance with this._logLevels\n     * @param moduleName - Name of the logging module\n     * @param component - Component owning this instance of {@link Log}\n     * @returns {Log} this\n     */\n    value: function createLog(moduleName, component) {\n      var name = this._loggerName; // Grab the original logger name\n\n      if (!this._logLevelsEqual) {\n        name = name.substring(0, name.lastIndexOf('-'));\n      }\n\n      return new Log(moduleName, component, this._logLevels, name);\n    }\n    /**\n     * Set new log levels.\n     * This changes the levels for all its ancestors,\n     * siblings, and children and descendants instances of {@link Log}.\n     * @param {LogLevels} levels - New log levels\n     * @throws {TwilioError} INVALID_ARGUMENT\n     * @returns {Log} this\n     */\n\n  }, {\n    key: 'setLevels',\n    value: function setLevels(levels) {\n      validateLogLevels(levels);\n      Object.assign(this._logLevels, levels);\n      return this;\n    }\n    /**\n     * Log a message using the logger method appropriate for the specified logLevel\n     * @param {Number} logLevel - Log level of the message being logged\n     * @param {Array} messages - Message(s) to log\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'log',\n    value: function log(logLevel, messages) {\n      var name = Log._levels[logLevel]; // eslint-disable-next-line no-use-before-define\n\n      if (!name) {\n        throw E.INVALID_VALUE('logLevel', LOG_LEVEL_VALUES);\n      }\n\n      name = name.toLowerCase();\n      var prefix = [new Date().toISOString(), name, this.name];\n      (this._logger[name] || function noop() {}).apply(undefined, _toConsumableArray(prefix.concat(messages)));\n      return this;\n    }\n    /**\n     * Log a debug message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'debug',\n    value: function debug() {\n      return this.log(Log.DEBUG, [].slice.call(arguments));\n    }\n    /**\n     * Log a deprecation warning. Deprecation warnings are logged as warnings and\n     * they are only ever logged once.\n     * @param {String} deprecationWarning - The deprecation warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'deprecated',\n    value: function deprecated(deprecationWarning) {\n      var deprecationWarnings = getDeprecationWarnings(this._component.constructor);\n\n      if (deprecationWarnings.has(deprecationWarning)) {\n        return this;\n      }\n\n      deprecationWarnings.add(deprecationWarning);\n      return this.warn(deprecationWarning);\n    }\n    /**\n     * Log an info message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'info',\n    value: function info() {\n      return this.log(Log.INFO, [].slice.call(arguments));\n    }\n    /**\n     * Log a warn message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warn',\n    value: function warn() {\n      return this.log(Log.WARN, [].slice.call(arguments));\n    }\n    /**\n     * Log a warning once.\n     * @param {String} warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warnOnce',\n    value: function warnOnce(warning) {\n      if (this._warnings.has(warning)) {\n        return this;\n      }\n\n      this._warnings.add(warning);\n\n      return this.warn(warning);\n    }\n    /**\n     * Log an error message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'error',\n    value: function error() {\n      return this.log(Log.ERROR, [].slice.call(arguments));\n    }\n    /**\n     * Log an error message and throw an exception\n     * @param {TwilioError} error - Error to throw\n     * @param {String} customMessage - Custom message for the error\n     * @public\n     */\n\n  }, {\n    key: 'throw',\n    value: function _throw(error, customMessage) {\n      if (error.clone) {\n        error = error.clone(customMessage);\n      }\n\n      this.log(Log.ERROR, error);\n      throw error;\n    }\n  }], [{\n    key: 'getLevelByName',\n    value: function getLevelByName(name) {\n      if (!isNaN(name)) {\n        return parseInt(name, 10);\n      }\n\n      name = name.toUpperCase();\n      validateLogLevel(name);\n      return Log[name];\n    }\n  }]);\n\n  return Log;\n}(); // Singleton Constants\n\n/* eslint key-spacing:0 */\n\n/* istanbul ignore next */\n\n\nObject.defineProperties(Log, {\n  DEBUG: {\n    value: 0\n  },\n  INFO: {\n    value: 1\n  },\n  WARN: {\n    value: 2\n  },\n  ERROR: {\n    value: 3\n  },\n  OFF: {\n    value: 4\n  },\n  _levels: {\n    value: ['DEBUG', 'INFO', 'WARN', 'ERROR', 'OFF']\n  }\n});\nvar LOG_LEVELS_SET = {};\nvar LOG_LEVEL_VALUES = [];\n\nvar LOG_LEVEL_NAMES = Log._levels.map(function (level, i) {\n  LOG_LEVELS_SET[level] = true;\n  LOG_LEVEL_VALUES.push(i);\n  return level;\n});\n\nfunction validateLogLevel(level) {\n  if (!(level in LOG_LEVELS_SET)) {\n    throw E.INVALID_VALUE('level', LOG_LEVEL_NAMES);\n  }\n}\n\nfunction validateLogLevels(levels) {\n  Object.keys(levels).forEach(function (moduleName) {\n    validateLogLevel(levels[moduleName].toUpperCase());\n  });\n}\n\nmodule.exports = Log;","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/twilio-video/es5/util/log.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","defaultGetLogger","require","getLogger","constants","DEFAULT_LOG_LEVEL","DEFAULT_LOGGER_NAME","E","typeErrors","deprecationWarningsByComponentConstructor","getDeprecationWarnings","componentConstructor","Map","has","get","deprecationWarnings","Set","set","Log","moduleName","component","logLevels","loggerName","INVALID_TYPE","REQUIRED_ARGUMENT","validateLogLevels","_component","value","_logLevels","_warnings","_loggerName","name","_logLevelsEqual","_logger","logger","level","setDefaultLevel","values","size","logLevel","getLevelByName","toString","bind","createLog","substring","lastIndexOf","setLevels","levels","assign","log","messages","_levels","INVALID_VALUE","LOG_LEVEL_VALUES","toLowerCase","prefix","Date","toISOString","noop","apply","undefined","concat","debug","DEBUG","slice","call","arguments","deprecated","deprecationWarning","add","warn","info","INFO","WARN","warnOnce","warning","error","ERROR","_throw","customMessage","clone","isNaN","parseInt","toUpperCase","validateLogLevel","OFF","LOG_LEVELS_SET","LOG_LEVEL_NAMES","map","push","keys","forEach","module","exports"],"mappings":"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","sourcesContent":["/* eslint new-cap:0 */\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultGetLogger = require('../vendor/loglevel').getLogger;\nvar constants = require('./constants');\nvar DEFAULT_LOG_LEVEL = constants.DEFAULT_LOG_LEVEL,\n    DEFAULT_LOGGER_NAME = constants.DEFAULT_LOGGER_NAME;\n\nvar E = require('./constants').typeErrors;\n\nvar deprecationWarningsByComponentConstructor = void 0;\n\nfunction getDeprecationWarnings(componentConstructor) {\n  deprecationWarningsByComponentConstructor = deprecationWarningsByComponentConstructor || new Map();\n  if (deprecationWarningsByComponentConstructor.has(componentConstructor)) {\n    return deprecationWarningsByComponentConstructor.get(componentConstructor);\n  }\n  var deprecationWarnings = new Set();\n  deprecationWarningsByComponentConstructor.set(componentConstructor, deprecationWarnings);\n  return deprecationWarnings;\n}\n\n/**\n * Selectively outputs messages to console based on specified minimum module\n * specific log levels.\n *\n * NOTE: The values in the logLevels object passed to the constructor is changed\n *       by subsequent calls to {@link Log#setLevels}.\n */\n\nvar Log = function () {\n  /**\n   * Construct a new {@link Log} object.\n   * @param {String} moduleName - Name of the logging module (webrtc/media/signaling)\n   * @param {object} component - Component owning this instance of {@link Log}\n   * @param {LogLevels} logLevels - Logging levels. See {@link LogLevels}\n   * @param {String} loggerName - Name of the logger instance. Used when calling getLogger from loglevel module\n   */\n  function Log(moduleName, component, logLevels, loggerName, getLogger) {\n    _classCallCheck(this, Log);\n\n    if (typeof moduleName !== 'string') {\n      throw E.INVALID_TYPE('moduleName', 'string');\n    }\n\n    if (!component) {\n      throw E.REQUIRED_ARGUMENT('component');\n    }\n\n    if ((typeof logLevels === 'undefined' ? 'undefined' : _typeof(logLevels)) !== 'object') {\n      logLevels = {};\n    }\n\n    getLogger = getLogger || defaultGetLogger;\n\n    validateLogLevels(logLevels);\n\n    /* istanbul ignore next */\n    Object.defineProperties(this, {\n      _component: {\n        value: component\n      },\n      _logLevels: {\n        value: logLevels\n      },\n      _warnings: {\n        value: new Set()\n      },\n      _loggerName: {\n        get: function get() {\n          var name = loggerName && typeof loggerName === 'string' ? loggerName : DEFAULT_LOGGER_NAME;\n\n          if (!this._logLevelsEqual) {\n            name = name + '-' + moduleName;\n          }\n          return name;\n        }\n      },\n      _logger: {\n        get: function get() {\n          var logger = getLogger(this._loggerName);\n          var level = this._logLevels[moduleName] || DEFAULT_LOG_LEVEL;\n\n          // There is no 'off' in the logger module. It uses 'silent' instead\n          level = level === 'off' ? 'silent' : level;\n\n          logger.setDefaultLevel(level);\n          return logger;\n        }\n      },\n      _logLevelsEqual: {\n        get: function get() {\n          // True if all levels are the same\n          return new Set(Object.values(this._logLevels)).size === 1;\n        }\n      },\n      logLevel: {\n        get: function get() {\n          return Log.getLevelByName(logLevels[moduleName] || DEFAULT_LOG_LEVEL);\n        }\n      },\n      name: { get: component.toString.bind(component) }\n    });\n  }\n\n  /**\n   * Get the log level (number) by its name (string)\n   * @param {String} name - Name of the log level\n   * @returns {Number} Requested log level\n   * @throws {TwilioError} INVALID_LOG_LEVEL (32056)\n   * @public\n   */\n\n\n  _createClass(Log, [{\n    key: 'createLog',\n\n\n    /**\n     * Create a child {@link Log} instance with this._logLevels\n     * @param moduleName - Name of the logging module\n     * @param component - Component owning this instance of {@link Log}\n     * @returns {Log} this\n     */\n    value: function createLog(moduleName, component) {\n      var name = this._loggerName;\n      // Grab the original logger name\n      if (!this._logLevelsEqual) {\n        name = name.substring(0, name.lastIndexOf('-'));\n      }\n      return new Log(moduleName, component, this._logLevels, name);\n    }\n\n    /**\n     * Set new log levels.\n     * This changes the levels for all its ancestors,\n     * siblings, and children and descendants instances of {@link Log}.\n     * @param {LogLevels} levels - New log levels\n     * @throws {TwilioError} INVALID_ARGUMENT\n     * @returns {Log} this\n     */\n\n  }, {\n    key: 'setLevels',\n    value: function setLevels(levels) {\n      validateLogLevels(levels);\n      Object.assign(this._logLevels, levels);\n      return this;\n    }\n\n    /**\n     * Log a message using the logger method appropriate for the specified logLevel\n     * @param {Number} logLevel - Log level of the message being logged\n     * @param {Array} messages - Message(s) to log\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'log',\n    value: function log(logLevel, messages) {\n      var name = Log._levels[logLevel];\n      // eslint-disable-next-line no-use-before-define\n      if (!name) {\n        throw E.INVALID_VALUE('logLevel', LOG_LEVEL_VALUES);\n      }\n\n      name = name.toLowerCase();\n      var prefix = [new Date().toISOString(), name, this.name];\n\n      (this._logger[name] || function noop() {}).apply(undefined, _toConsumableArray(prefix.concat(messages)));\n\n      return this;\n    }\n\n    /**\n     * Log a debug message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'debug',\n    value: function debug() {\n      return this.log(Log.DEBUG, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a deprecation warning. Deprecation warnings are logged as warnings and\n     * they are only ever logged once.\n     * @param {String} deprecationWarning - The deprecation warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'deprecated',\n    value: function deprecated(deprecationWarning) {\n      var deprecationWarnings = getDeprecationWarnings(this._component.constructor);\n      if (deprecationWarnings.has(deprecationWarning)) {\n        return this;\n      }\n      deprecationWarnings.add(deprecationWarning);\n      return this.warn(deprecationWarning);\n    }\n\n    /**\n     * Log an info message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'info',\n    value: function info() {\n      return this.log(Log.INFO, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a warn message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warn',\n    value: function warn() {\n      return this.log(Log.WARN, [].slice.call(arguments));\n    }\n\n    /**\n     * Log a warning once.\n     * @param {String} warning\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'warnOnce',\n    value: function warnOnce(warning) {\n      if (this._warnings.has(warning)) {\n        return this;\n      }\n      this._warnings.add(warning);\n      return this.warn(warning);\n    }\n\n    /**\n     * Log an error message\n     * @param {...String} messages - Message(s) to pass to the logger\n     * @returns {Log} This instance of {@link Log}\n     * @public\n     */\n\n  }, {\n    key: 'error',\n    value: function error() {\n      return this.log(Log.ERROR, [].slice.call(arguments));\n    }\n\n    /**\n     * Log an error message and throw an exception\n     * @param {TwilioError} error - Error to throw\n     * @param {String} customMessage - Custom message for the error\n     * @public\n     */\n\n  }, {\n    key: 'throw',\n    value: function _throw(error, customMessage) {\n      if (error.clone) {\n        error = error.clone(customMessage);\n      }\n\n      this.log(Log.ERROR, error);\n      throw error;\n    }\n  }], [{\n    key: 'getLevelByName',\n    value: function getLevelByName(name) {\n      if (!isNaN(name)) {\n        return parseInt(name, 10);\n      }\n      name = name.toUpperCase();\n      validateLogLevel(name);\n      return Log[name];\n    }\n  }]);\n\n  return Log;\n}();\n\n// Singleton Constants\n/* eslint key-spacing:0 */\n/* istanbul ignore next */\n\n\nObject.defineProperties(Log, {\n  DEBUG: { value: 0 },\n  INFO: { value: 1 },\n  WARN: { value: 2 },\n  ERROR: { value: 3 },\n  OFF: { value: 4 },\n  _levels: {\n    value: ['DEBUG', 'INFO', 'WARN', 'ERROR', 'OFF']\n  }\n});\n\nvar LOG_LEVELS_SET = {};\nvar LOG_LEVEL_VALUES = [];\n\nvar LOG_LEVEL_NAMES = Log._levels.map(function (level, i) {\n  LOG_LEVELS_SET[level] = true;\n  LOG_LEVEL_VALUES.push(i);\n  return level;\n});\n\nfunction validateLogLevel(level) {\n  if (!(level in LOG_LEVELS_SET)) {\n    throw E.INVALID_VALUE('level', LOG_LEVEL_NAMES);\n  }\n}\n\nfunction validateLogLevels(levels) {\n  Object.keys(levels).forEach(function (moduleName) {\n    validateLogLevel(levels[moduleName].toUpperCase());\n  });\n}\n\nmodule.exports = Log;"]},"metadata":{},"sourceType":"script"}