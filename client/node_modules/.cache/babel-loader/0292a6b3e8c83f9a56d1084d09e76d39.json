{"ast":null,"code":"import { forwardRef, useContext, createElement, Fragment } from 'react';\nimport { MotionConfigContext } from './context/MotionConfigContext.js';\nimport { useFeatures } from './features/use-features.js';\nimport { MotionContext } from './context/MotionContext.js';\nimport { useVisualElement } from './utils/use-visual-element.js';\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\n\nfunction createMotionComponent(_a) {\n  var defaultFeatures = _a.defaultFeatures,\n      createVisualElement = _a.createVisualElement,\n      useRender = _a.useRender;\n\n  function MotionComponent(props, externalRef) {\n    /**\n     * If a component is static, we only visually update it as a\n     * result of a React re-render, rather than any interactions or animations.\n     * If this component or any ancestor is static, we disable hardware acceleration\n     * and don't load any additional functionality.\n     */\n    var isStatic = useContext(MotionConfigContext).isStatic;\n    /**\n     * Create a VisualElement for this component. A VisualElement provides a common\n     * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n     * providing a way of rendering to these APIs outside of the React render loop\n     * for more performant animations and interactions\n     */\n\n    var visualElement = useVisualElement(createVisualElement, props, isStatic, externalRef);\n    /**\n     * Load features as renderless components unless the component isStatic\n     */\n\n    var features = useFeatures(defaultFeatures, isStatic, visualElement, props);\n    var component = useRender(props, visualElement); // The mount order and hierarchy is specific to ensure our element ref is hydrated by the time\n    // all plugins and features has to execute.\n\n    return createElement(Fragment, null, createElement(MotionContext.Provider, {\n      value: visualElement\n    }, component), features);\n  }\n\n  return forwardRef(MotionComponent);\n}\n\nexport { createMotionComponent };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/motion/index.js"],"names":["forwardRef","useContext","createElement","Fragment","MotionConfigContext","useFeatures","MotionContext","useVisualElement","createMotionComponent","_a","defaultFeatures","createVisualElement","useRender","MotionComponent","props","externalRef","isStatic","visualElement","features","component","Provider","value"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BC,EAA/B,EAAmC;AAC/B,MAAIC,eAAe,GAAGD,EAAE,CAACC,eAAzB;AAAA,MAA0CC,mBAAmB,GAAGF,EAAE,CAACE,mBAAnE;AAAA,MAAwFC,SAAS,GAAGH,EAAE,CAACG,SAAvG;;AACA,WAASC,eAAT,CAAyBC,KAAzB,EAAgCC,WAAhC,EAA6C;AACzC;AACR;AACA;AACA;AACA;AACA;AACQ,QAAIC,QAAQ,GAAGf,UAAU,CAACG,mBAAD,CAAV,CAAgCY,QAA/C;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,QAAIC,aAAa,GAAGV,gBAAgB,CAACI,mBAAD,EAAsBG,KAAtB,EAA6BE,QAA7B,EAAuCD,WAAvC,CAApC;AACA;AACR;AACA;;AACQ,QAAIG,QAAQ,GAAGb,WAAW,CAACK,eAAD,EAAkBM,QAAlB,EAA4BC,aAA5B,EAA2CH,KAA3C,CAA1B;AACA,QAAIK,SAAS,GAAGP,SAAS,CAACE,KAAD,EAAQG,aAAR,CAAzB,CAnByC,CAoBzC;AACA;;AACA,WAAQf,aAAa,CAACC,QAAD,EAAW,IAAX,EACjBD,aAAa,CAACI,aAAa,CAACc,QAAf,EAAyB;AAAEC,MAAAA,KAAK,EAAEJ;AAAT,KAAzB,EAAmDE,SAAnD,CADI,EAEjBD,QAFiB,CAArB;AAGH;;AACD,SAAOlB,UAAU,CAACa,eAAD,CAAjB;AACH;;AAED,SAASL,qBAAT","sourcesContent":["import { forwardRef, useContext, createElement, Fragment } from 'react';\nimport { MotionConfigContext } from './context/MotionConfigContext.js';\nimport { useFeatures } from './features/use-features.js';\nimport { MotionContext } from './context/MotionContext.js';\nimport { useVisualElement } from './utils/use-visual-element.js';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var defaultFeatures = _a.defaultFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender;\n    function MotionComponent(props, externalRef) {\n        /**\n         * If a component is static, we only visually update it as a\n         * result of a React re-render, rather than any interactions or animations.\n         * If this component or any ancestor is static, we disable hardware acceleration\n         * and don't load any additional functionality.\n         */\n        var isStatic = useContext(MotionConfigContext).isStatic;\n        /**\n         * Create a VisualElement for this component. A VisualElement provides a common\n         * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n         * providing a way of rendering to these APIs outside of the React render loop\n         * for more performant animations and interactions\n         */\n        var visualElement = useVisualElement(createVisualElement, props, isStatic, externalRef);\n        /**\n         * Load features as renderless components unless the component isStatic\n         */\n        var features = useFeatures(defaultFeatures, isStatic, visualElement, props);\n        var component = useRender(props, visualElement);\n        // The mount order and hierarchy is specific to ensure our element ref is hydrated by the time\n        // all plugins and features has to execute.\n        return (createElement(Fragment, null,\n            createElement(MotionContext.Provider, { value: visualElement }, component),\n            features));\n    }\n    return forwardRef(MotionComponent);\n}\n\nexport { createMotionComponent };\n"]},"metadata":{},"sourceType":"module"}