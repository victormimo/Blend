{"ast":null,"code":"import { addUniqueItem, removeItem } from './array.js';\n\nfunction subscriptionManager() {\n  var subscriptions = [];\n  return {\n    add: function (handler) {\n      addUniqueItem(subscriptions, handler);\n      return function () {\n        return removeItem(subscriptions, handler);\n      };\n    },\n    notify: function (a, b, c) {\n      var numSubscriptions = subscriptions.length;\n      if (!numSubscriptions) return;\n\n      if (numSubscriptions === 1) {\n        /**\n         * If there's only a single handler we can just call it without invoking a loop.\n         */\n        subscriptions[0](a, b, c);\n      } else {\n        for (var i = 0; i < numSubscriptions; i++) {\n          /**\n           * Check whether the handler exists before firing as it's possible\n           * the subscriptions were modified during this loop running.\n           */\n          var handler = subscriptions[i];\n          handler && handler(a, b, c);\n        }\n      }\n    },\n    getSize: function () {\n      return subscriptions.length;\n    },\n    clear: function () {\n      subscriptions.length = 0;\n    }\n  };\n}\n\nexport { subscriptionManager };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/utils/subscription-manager.js"],"names":["addUniqueItem","removeItem","subscriptionManager","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;;AAEA,SAASC,mBAAT,GAA+B;AAC3B,MAAIC,aAAa,GAAG,EAApB;AACA,SAAO;AACHC,IAAAA,GAAG,EAAE,UAAUC,OAAV,EAAmB;AACpBL,MAAAA,aAAa,CAACG,aAAD,EAAgBE,OAAhB,CAAb;AACA,aAAO,YAAY;AAAE,eAAOJ,UAAU,CAACE,aAAD,EAAgBE,OAAhB,CAAjB;AAA4C,OAAjE;AACH,KAJE;AAKHC,IAAAA,MAAM,EAAE,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACvB,UAAIC,gBAAgB,GAAGP,aAAa,CAACQ,MAArC;AACA,UAAI,CAACD,gBAAL,EACI;;AACJ,UAAIA,gBAAgB,KAAK,CAAzB,EAA4B;AACxB;AAChB;AACA;AACgBP,QAAAA,aAAa,CAAC,CAAD,CAAb,CAAiBI,CAAjB,EAAoBC,CAApB,EAAuBC,CAAvB;AACH,OALD,MAMK;AACD,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAApB,EAAsCE,CAAC,EAAvC,EAA2C;AACvC;AACpB;AACA;AACA;AACoB,cAAIP,OAAO,GAAGF,aAAa,CAACS,CAAD,CAA3B;AACAP,UAAAA,OAAO,IAAIA,OAAO,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAlB;AACH;AACJ;AACJ,KAzBE;AA0BHI,IAAAA,OAAO,EAAE,YAAY;AAAE,aAAOV,aAAa,CAACQ,MAArB;AAA8B,KA1BlD;AA2BHG,IAAAA,KAAK,EAAE,YAAY;AACfX,MAAAA,aAAa,CAACQ,MAAd,GAAuB,CAAvB;AACH;AA7BE,GAAP;AA+BH;;AAED,SAAST,mBAAT","sourcesContent":["import { addUniqueItem, removeItem } from './array.js';\n\nfunction subscriptionManager() {\n    var subscriptions = [];\n    return {\n        add: function (handler) {\n            addUniqueItem(subscriptions, handler);\n            return function () { return removeItem(subscriptions, handler); };\n        },\n        notify: function (a, b, c) {\n            var numSubscriptions = subscriptions.length;\n            if (!numSubscriptions)\n                return;\n            if (numSubscriptions === 1) {\n                /**\n                 * If there's only a single handler we can just call it without invoking a loop.\n                 */\n                subscriptions[0](a, b, c);\n            }\n            else {\n                for (var i = 0; i < numSubscriptions; i++) {\n                    /**\n                     * Check whether the handler exists before firing as it's possible\n                     * the subscriptions were modified during this loop running.\n                     */\n                    var handler = subscriptions[i];\n                    handler && handler(a, b, c);\n                }\n            }\n        },\n        getSize: function () { return subscriptions.length; },\n        clear: function () {\n            subscriptions.length = 0;\n        },\n    };\n}\n\nexport { subscriptionManager };\n"]},"metadata":{},"sourceType":"module"}