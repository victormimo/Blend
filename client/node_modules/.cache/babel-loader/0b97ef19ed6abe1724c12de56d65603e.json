{"ast":null,"code":"import { __assign } from 'tslib';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { getDefaultValueType } from './utils/value-types.js';\nimport { visualElement } from '../index.js';\nimport { htmlConfig } from './html-visual-element.js';\nimport { buildSVGAttrs } from './utils/build-svg-attrs.js';\nimport { camelToDash } from './utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/svg-camel-case-attrs.js';\nvar zeroDimensions = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0\n};\n\nvar svgMutableState = function () {\n  return __assign(__assign({}, htmlConfig.createRenderState()), {\n    attrs: {},\n    dimensions: zeroDimensions\n  });\n};\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  createRenderState: svgMutableState,\n  onMount: function (element, instance, mutableState) {\n    try {\n      mutableState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n    } catch (e) {\n      // Most likely trying to measure an unrendered element under Firefox\n      mutableState.dimensions = zeroDimensions;\n    }\n\n    if (isPath(instance)) {\n      mutableState.totalPathLength = instance.getTotalLength();\n    }\n    /**\n     * Ensure we render the element as soon as possible to reflect the measured dimensions.\n     * Preferably this would happen synchronously but we put it in rAF to prevent layout thrashing.\n     */\n\n\n    element.scheduleRender();\n  },\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: function (props) {\n    var newValues = htmlConfig.scrapeMotionValuesFromProps(props);\n\n    for (var key in props) {\n      if (isMotionValue(props[key])) {\n        if (key === \"x\" || key === \"y\") {\n          key = \"attr\" + key.toUpperCase();\n        }\n\n        newValues[key] = props[key];\n      }\n    }\n\n    return newValues;\n  },\n  build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n  },\n  render: function (element, mutableState) {\n    htmlConfig.render(element, mutableState);\n\n    for (var key in mutableState.attrs) {\n      element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, mutableState.attrs[key]);\n    }\n  }\n}));\n\nfunction isPath(element) {\n  return element.tagName === \"path\";\n}\n\nexport { svgMutableState, svgVisualElement };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/render/dom/svg-visual-element.js"],"names":["__assign","isMotionValue","isTransformProp","getDefaultValueType","visualElement","htmlConfig","buildSVGAttrs","camelToDash","camelCaseAttributes","zeroDimensions","x","y","width","height","svgMutableState","createRenderState","attrs","dimensions","svgVisualElement","onMount","element","instance","mutableState","getBBox","getBoundingClientRect","e","isPath","totalPathLength","getTotalLength","scheduleRender","getBaseTarget","props","key","readValueFromInstance","domElement","_a","default","has","getAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","build","_element","renderState","latestValues","projection","layoutState","options","transformTemplate","render","setAttribute","tagName"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { getDefaultValueType } from './utils/value-types.js';\nimport { visualElement } from '../index.js';\nimport { htmlConfig } from './html-visual-element.js';\nimport { buildSVGAttrs } from './utils/build-svg-attrs.js';\nimport { camelToDash } from './utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/svg-camel-case-attrs.js';\n\nvar zeroDimensions = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n};\nvar svgMutableState = function () { return (__assign(__assign({}, htmlConfig.createRenderState()), { attrs: {}, dimensions: zeroDimensions })); };\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { createRenderState: svgMutableState, onMount: function (element, instance, mutableState) {\n        try {\n            mutableState.dimensions =\n                typeof instance.getBBox === \"function\"\n                    ? instance.getBBox()\n                    : instance.getBoundingClientRect();\n        }\n        catch (e) {\n            // Most likely trying to measure an unrendered element under Firefox\n            mutableState.dimensions = zeroDimensions;\n        }\n        if (isPath(instance)) {\n            mutableState.totalPathLength = instance.getTotalLength();\n        }\n        /**\n         * Ensure we render the element as soon as possible to reflect the measured dimensions.\n         * Preferably this would happen synchronously but we put it in rAF to prevent layout thrashing.\n         */\n        element.scheduleRender();\n    },\n    getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: function (props) {\n        var newValues = htmlConfig.scrapeMotionValuesFromProps(props);\n        for (var key in props) {\n            if (isMotionValue(props[key])) {\n                if (key === \"x\" || key === \"y\") {\n                    key = \"attr\" + key.toUpperCase();\n                }\n                newValues[key] = props[key];\n            }\n        }\n        return newValues;\n    },\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n    },\n    render: function (element, mutableState) {\n        htmlConfig.render(element, mutableState);\n        for (var key in mutableState.attrs) {\n            element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, mutableState.attrs[key]);\n        }\n    } }));\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nexport { svgMutableState, svgVisualElement };\n"]},"metadata":{},"sourceType":"module"}