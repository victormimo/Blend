{"ast":null,"code":"import { __rest } from 'tslib';\nimport { axisBox, delta } from '../../utils/geometry/index.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { checkIfControllingVariants, resolveVariantFromProps } from './variants.js';\nimport { isAnimationControls } from '../../animation/animation-controls.js';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.js';\n\nvar createProjectionState = function () {\n  return {\n    isEnabled: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox()\n  };\n};\n\nfunction createVisualState(props, parent, blockInitialAnimation) {\n  var style = props.style;\n  var values = {};\n\n  for (var key in style) {\n    if (isMotionValue(style[key])) {\n      values[key] = style[key].get();\n    } else if (isForcedMotionValue(key, props)) {\n      values[key] = style[key];\n    }\n  }\n\n  var initial = props.initial,\n      animate = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = isControllingVariants || props.variants;\n\n  if (isVariantNode && !isControllingVariants && props.inherit !== false) {\n    var context = parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n\n    if (context) {\n      initial !== null && initial !== void 0 ? initial : initial = context.initial;\n      animate !== null && animate !== void 0 ? animate : animate = context.animate;\n    }\n  }\n\n  var initialToSet = blockInitialAnimation || initial === false ? animate : initial;\n\n  if (initialToSet && typeof initialToSet !== \"boolean\" && !isAnimationControls(initialToSet)) {\n    var list = Array.isArray(initialToSet) ? initialToSet : [initialToSet];\n    list.forEach(function (definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n\n      var transitionEnd = resolved.transitionEnd,\n          transition = resolved.transition,\n          target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (var key in target) values[key] = target[key];\n\n      for (var key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nfunction createLayoutState() {\n  return {\n    isHydrated: false,\n    layout: axisBox(),\n    layoutCorrected: axisBox(),\n    treeScale: {\n      x: 1,\n      y: 1\n    },\n    delta: delta(),\n    deltaFinal: delta(),\n    deltaTransform: \"\"\n  };\n}\n\nvar zeroLayout = createLayoutState();\nexport { createLayoutState, createProjectionState, createVisualState, zeroLayout };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/render/utils/state.js"],"names":["__rest","axisBox","delta","isMotionValue","checkIfControllingVariants","resolveVariantFromProps","isAnimationControls","isForcedMotionValue","createProjectionState","isEnabled","isTargetLocked","target","targetFinal","createVisualState","props","parent","blockInitialAnimation","style","values","key","get","initial","animate","isControllingVariants","isVariantNode","variants","inherit","context","getVariantContext","initialToSet","list","Array","isArray","forEach","definition","resolved","transitionEnd","transition","createLayoutState","isHydrated","layout","layoutCorrected","treeScale","x","y","deltaFinal","deltaTransform","zeroLayout"],"mappings":"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","sourcesContent":["import { __rest } from 'tslib';\nimport { axisBox, delta } from '../../utils/geometry/index.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nimport { checkIfControllingVariants, resolveVariantFromProps } from './variants.js';\nimport { isAnimationControls } from '../../animation/animation-controls.js';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.js';\n\nvar createProjectionState = function () { return ({\n    isEnabled: false,\n    isTargetLocked: false,\n    target: axisBox(),\n    targetFinal: axisBox(),\n}); };\nfunction createVisualState(props, parent, blockInitialAnimation) {\n    var style = props.style;\n    var values = {};\n    for (var key in style) {\n        if (isMotionValue(style[key])) {\n            values[key] = style[key].get();\n        }\n        else if (isForcedMotionValue(key, props)) {\n            values[key] = style[key];\n        }\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = isControllingVariants || props.variants;\n    if (isVariantNode && !isControllingVariants && props.inherit !== false) {\n        var context = parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n        if (context) {\n            initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n            animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n        }\n    }\n    var initialToSet = blockInitialAnimation || initial === false ? animate : initial;\n    if (initialToSet &&\n        typeof initialToSet !== \"boolean\" &&\n        !isAnimationControls(initialToSet)) {\n        var list = Array.isArray(initialToSet) ? initialToSet : [initialToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd, transition = resolved.transition, target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target)\n                values[key] = target[key];\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\nfunction createLayoutState() {\n    return {\n        isHydrated: false,\n        layout: axisBox(),\n        layoutCorrected: axisBox(),\n        treeScale: { x: 1, y: 1 },\n        delta: delta(),\n        deltaFinal: delta(),\n        deltaTransform: \"\",\n    };\n}\nvar zeroLayout = createLayoutState();\n\nexport { createLayoutState, createProjectionState, createVisualState, zeroLayout };\n"]},"metadata":{},"sourceType":"module"}