{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\n\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\n\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\n\nvar RecordingV2 = require('./recording');\n\nvar RoomSignaling = require('../room');\n\nvar RemoteParticipantV2 = require('./remoteparticipant');\n\nvar StatsReport = require('../../stats/statsreport');\n\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\n\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 10000;\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    Object.defineProperties(_this, {\n      _dominantSpeakerSignaling: {\n        value: null,\n        writable: true\n      },\n      _DominantSpeakerSignaling: {\n        value: options.DominantSpeakerSignaling\n      },\n      _dominantSpeakerSignalingPromise: {\n        value: null,\n        writable: true\n      },\n      _disconnectedParticipantRevisions: {\n        value: new Map()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _NetworkQualitySignaling: {\n        value: options.NetworkQualitySignaling\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityMonitorPromise: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _trackPriorityPromise: {\n        value: null,\n        writable: true\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffPromise: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffSignaling: {\n        value: null,\n        writable: true\n      },\n      _TrackPrioritySignaling: {\n        value: options.TrackPrioritySignaling\n      },\n      _TrackSwitchOffSignaling: {\n        value: options.TrackSwitchOffSignaling\n      },\n      _pendingSwitchOffStates: {\n        value: new Map()\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n\n    return _this;\n  }\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers(); // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n\n\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n\n      if (didDisconnect) {\n        this._teardownDominantSpeakerSignaling();\n\n        this._teardownNetworkQualityMonitor();\n\n        this._transport.disconnect();\n\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n      return didDisconnect;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n\n        return trackReceiver;\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getInitialTrackSwitchOffState',\n    value: function _getInitialTrackSwitchOffState(trackSid) {\n      var initiallySwitchedOff = this._pendingSwitchOffStates.get(trackSid) || false;\n\n      this._pendingSwitchOffStates.delete(trackSid);\n\n      if (initiallySwitchedOff) {\n        this._log.warn('[' + trackSid + '] was initially switched off! ');\n      }\n\n      return initiallySwitchedOff;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, this._getTrackReceiver.bind(this), this._getInitialTrackSwitchOffState.bind(this));\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n\n            self._disconnectedParticipantRevisions.set(participant.sid, participant.revision);\n          }\n        });\n        this.connectParticipant(participant);\n        participant.setTrackPrioritySignaling(this._trackPrioritySignaling);\n      }\n\n      return participant;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this3 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this3._subscriptionFailures.delete(trackState.sid);\n\n            _this3._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this3._subscriptionFailures.has(trackState.sid)) {\n            _this3._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this3._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set(); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this3.localParticipant.sid) {\n          return;\n        } // NOTE(mmalavalli): If the incoming revision for a disconnected Participant is less than or\n        // equal to the revision when it was disconnected, then the state is old and can be ignored.\n        // Otherwise, the Participant was most likely disconnected in a Large Group Room when it\n        // stopped publishing media, and hence needs to be re-added.\n\n\n        var disconnectedParticipantRevision = _this3._disconnectedParticipantRevisions.get(participantState.sid);\n\n        if (disconnectedParticipantRevision && participantState.revision <= disconnectedParticipantRevision) {\n          return;\n        }\n\n        if (disconnectedParticipantRevision) {\n          _this3._disconnectedParticipantRevisions.delete(participantState.sid);\n        }\n\n        var participant = _this3._getOrCreateRemoteParticipant(participantState);\n\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      /* eslint camelcase:0 */\n\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this3._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      if (!this._dominantSpeakerSignalingPromise && roomState.media_signaling && roomState.media_signaling.active_speaker && roomState.media_signaling.active_speaker.transport && roomState.media_signaling.active_speaker.transport.type === 'data-channel') {\n        this._setupDataTransportBackedDominantSpeakerSignaling(roomState.media_signaling.active_speaker.transport.label);\n      }\n\n      if (!this._networkQualityMonitorPromise && roomState.media_signaling && roomState.media_signaling.network_quality && roomState.media_signaling.network_quality.transport && roomState.media_signaling.network_quality.transport.type === 'data-channel') {\n        this._setupDataTransportBackedNetworkQualityMonitor(roomState.media_signaling.network_quality.transport.label);\n      }\n\n      if (!this._trackPriorityPromise && roomState.media_signaling && roomState.media_signaling.track_priority && roomState.media_signaling.track_priority.transport && roomState.media_signaling.track_priority.transport.type === 'data-channel') {\n        this._setupTrackPrioritySignaling(roomState.media_signaling.track_priority.transport.label);\n      }\n\n      if (!this._trackSwitchOffPromise && roomState.media_signaling && roomState.media_signaling.track_switch_off && roomState.media_signaling.track_switch_off.transport && roomState.media_signaling.track_switch_off.transport.type === 'data-channel') {\n        this._setupTrackSwitchOffMonitor(roomState.media_signaling.track_switch_off.transport.label);\n      }\n\n      return this;\n    } // track priority signaling MSP is now used only for subscribe side priority changes.\n    // publisher side priority changes and notifications are handled by RSP.\n\n  }, {\n    key: '_setupTrackPrioritySignaling',\n    value: function _setupTrackPrioritySignaling(id) {\n      var _this4 = this;\n\n      this._teardownTrackPrioritySignaling();\n\n      var trackPriorityPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this4._trackPriorityPromise !== trackPriorityPromise) {\n          return;\n        } // NOTE(mmalavalli): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Track Priority updates.\n\n\n        receiver.once('close', function () {\n          return _this4._teardownTrackPrioritySignaling();\n        });\n        _this4._trackPrioritySignaling = new _this4._TrackPrioritySignaling(receiver.toDataTransport());\n        [].concat(_toConsumableArray(_this4.participants.values())).forEach(function (participant) {\n          participant.setTrackPrioritySignaling(_this4._trackPrioritySignaling);\n        });\n      });\n\n      this._trackPriorityPromise = trackPriorityPromise;\n    }\n  }, {\n    key: '_setupTrackSwitchOff',\n    value: function _setupTrackSwitchOff(trackSwitchOffSignaling) {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling = trackSwitchOffSignaling;\n      trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        try {\n          _this5._log.warn('trackSwitchOff: On: ', tracksOn, ' Off: ', tracksOff);\n\n          var trackUpdates = new Map();\n          tracksOn.forEach(function (trackSid) {\n            return trackUpdates.set(trackSid, true);\n          });\n          tracksOff.forEach(function (trackSid) {\n            if (trackUpdates.get(trackSid)) {\n              // NOTE(mpatwardhan): This means that VIDEO-3762 has been reproduced.\n              _this5._log.warn(trackSid + ' is DUPLICATED in both tracksOff and tracksOn list');\n            }\n\n            trackUpdates.set(trackSid, false);\n          });\n\n          _this5.participants.forEach(function (participant) {\n            participant.tracks.forEach(function (track) {\n              var isOn = trackUpdates.get(track.sid);\n\n              if (typeof isOn !== 'undefined') {\n                track.setSwitchedOff(!isOn);\n                trackUpdates.delete(track.sid);\n              }\n            });\n          }); // NOTE(mpatwardhan): Cache any notification about the tracks that we do not yet know about.\n\n\n          trackUpdates.forEach(function (isOn, trackSid) {\n            return _this5._pendingSwitchOffStates.set(trackSid, !isOn);\n          });\n        } catch (ex) {\n          _this5._log.error('error processing track switch off:', ex);\n        }\n      });\n    }\n  }, {\n    key: '_setupTrackSwitchOffMonitor',\n    value: function _setupTrackSwitchOffMonitor(id) {\n      var _this6 = this;\n\n      this._teardownTrackSwitchOff();\n\n      var trackSwitchOffPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this6._trackSwitchOffPromise !== trackSwitchOffPromise) {\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n\n\n        receiver.once('close', function () {\n          return _this6._teardownTrackSwitchOff();\n        });\n        var trackSwitchOffSignaling = new _this6._TrackSwitchOffSignaling(receiver.toDataTransport());\n\n        _this6._setupTrackSwitchOff(trackSwitchOffSignaling);\n      });\n\n      this._trackSwitchOffPromise = trackSwitchOffPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link DominantSpeakerSignaling}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link DominantSpeakerSignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedDominantSpeakerSignaling',\n    value: function _setupDataTransportBackedDominantSpeakerSignaling(id) {\n      var _this7 = this;\n\n      this._teardownDominantSpeakerSignaling();\n\n      var dominantSpeakerSignalingPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this7._dominantSpeakerSignalingPromise !== dominantSpeakerSignalingPromise) {\n          // NOTE(mroberts): _teardownDominantSpeakerSignaling was called.\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n\n\n        receiver.once('close', function () {\n          return _this7._teardownDominantSpeakerSignaling();\n        });\n        var dominantSpeakerSignaling = new _this7._DominantSpeakerSignaling(receiver.toDataTransport());\n\n        _this7._setDominantSpeakerSignaling(dominantSpeakerSignaling);\n      });\n\n      this._dominantSpeakerSignalingPromise = dominantSpeakerSignalingPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link NetworkQualityMonitor}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link NetworkQualitySignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedNetworkQualityMonitor',\n    value: function _setupDataTransportBackedNetworkQualityMonitor(id) {\n      var _this8 = this;\n\n      var self = this;\n\n      this._teardownNetworkQualityMonitor();\n\n      var networkQualityMonitorPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }\n\n        if (_this8._networkQualityMonitorPromise !== networkQualityMonitorPromise) {\n          // NOTE(mroberts): _teardownNetworkQualityMonitor was called.\n          return;\n        } // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and new a RTCDataChannel is created in order\n        // to resume exchanging Network Quality messages.\n\n\n        receiver.once('close', function () {\n          return _this8._teardownNetworkQualityMonitor();\n        });\n        var networkQualitySignaling = new _this8._NetworkQualitySignaling(receiver.toDataTransport(), self._networkQualityConfiguration);\n        var networkQualityMonitor = new _this8._NetworkQualityMonitor(_this8._peerConnectionManager, networkQualitySignaling);\n\n        _this8._setNetworkQualityMonitor(networkQualityMonitor);\n      });\n\n      this._networkQualityMonitorPromise = networkQualityMonitorPromise;\n    }\n  }, {\n    key: '_setDominantSpeakerSignaling',\n    value: function _setDominantSpeakerSignaling(dominantSpeakerSignaling) {\n      var _this9 = this;\n\n      this._dominantSpeakerSignaling = dominantSpeakerSignaling;\n      dominantSpeakerSignaling.on('updated', function () {\n        return _this9.setDominantSpeaker(dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_setNetworkQualityMonitor',\n    value: function _setNetworkQualityMonitor(networkQualityMonitor) {\n      var _this10 = this;\n\n      this._networkQualityMonitor = networkQualityMonitor;\n      networkQualityMonitor.on('updated', function () {\n        if (_this10.iceConnectionState === 'failed') {\n          return;\n        }\n\n        _this10.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n\n        _this10.participants.forEach(function (participant) {\n          var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n\n          if (levels) {\n            participant.setNetworkQualityLevel(levels.level, levels);\n          }\n        });\n      });\n      networkQualityMonitor.start();\n    }\n  }, {\n    key: '_teardownDominantSpeakerSignaling',\n    value: function _teardownDominantSpeakerSignaling() {\n      this._dominantSpeakerSignalingPromise = null;\n      this._dominantSpeakerSignaling = null;\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      this._networkQualityMonitorPromise = null;\n\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n\n        this._networkQualityMonitor = null;\n      }\n    }\n  }, {\n    key: '_teardownTrackPrioritySignaling',\n    value: function _teardownTrackPrioritySignaling() {\n      this._trackPrioritySignaling = null;\n      this._trackPriorityPromise = null;\n      this.localParticipant.setTrackPrioritySignaling(null);\n      this.participants.forEach(function (participant) {\n        participant.setTrackPrioritySignaling(null);\n      });\n    }\n  }, {\n    key: '_teardownTrackSwitchOff',\n    value: function _teardownTrackSwitchOff() {\n      this._trackSwitchOffSignaling = null;\n      this._trackSwitchOffPromise = null;\n    }\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this11 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this11, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this11, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, {\n      trackSid: trackSid\n    })].concat(trackStats) : trackStats;\n  }, []);\n}\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\n\n\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\n\n\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n\n      transport.removeListener('stateChanged', stateChanged);\n    }\n\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\n\n\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var oddPublishCount = false;\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      oddPublishCount = !oddPublishCount;\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add zeros to properties that do not exist.\n        var report = new StatsReport(id, response, true\n        /* prepareForInsights */\n        );\n        transport.publishEvent('quality', 'stats-report', {\n          audioTrackStats: report.remoteAudioTrackStats,\n          localAudioTrackStats: report.localAudioTrackStats,\n          localVideoTrackStats: report.localVideoTrackStats,\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats\n        });\n\n        if (oddPublishCount) {\n          // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n          // payload are assigned default values until the Insights gateway\n          // accepts null values.\n          var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n          transport.publishEvent('quality', 'active-ice-candidate-pair', activeIceCandidatePair);\n        }\n      });\n    }, function () {// Do nothing.\n    });\n  }, intervalMs);\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    relayProtocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/twilio-video/es5/signaling/v2/room.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","call","_toConsumableArray","arr2","from","_classCallCheck","instance","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","DominantSpeakerSignaling","require","NetworkQualityMonitor","NetworkQualitySignaling","RecordingV2","RoomSignaling","RemoteParticipantV2","StatsReport","TrackPrioritySignaling","TrackSwitchOffSignaling","_require","DEFAULT_SESSION_TIMEOUT_SEC","constants","createBandwidthProfilePayload","defer","filterObject","flatMap","oncePerTick","_require2","createTwilioError","STATS_PUBLISH_INTERVAL_MS","RoomV2","_RoomSignaling","localParticipant","initialState","transport","peerConnectionManager","options","assign","session_timeout","RecordingSignaling","bandwidthProfile","sessionTimeout","statsPublishIntervalMs","setBandwidthProfile","setIceReconnectTimeout","_this","sid","name","_dominantSpeakerSignaling","_DominantSpeakerSignaling","_dominantSpeakerSignalingPromise","_disconnectedParticipantRevisions","Map","_NetworkQualityMonitor","_NetworkQualitySignaling","_lastBandwidthProfileRevision","bandwidthProfileRevision","_networkQualityMonitor","_networkQualityMonitorPromise","_networkQualityConfiguration","networkQualityConfiguration","_peerConnectionManager","_published","_publishedRevision","_RemoteParticipantV2","_subscribed","_subscribedRevision","_subscriptionFailures","_trackPriorityPromise","_trackPrioritySignaling","_trackSwitchOffPromise","_trackSwitchOffSignaling","_TrackPrioritySignaling","_TrackSwitchOffSignaling","_pendingSwitchOffStates","_transport","_trackReceiverDeferreds","mediaRegion","media_region","handleLocalParticipantEvents","handlePeerConnectionEvents","handleTransportEvents","periodicallyPublishStats","_update","_deleteTrackReceiverDeferred","id","delete","_getOrCreateTrackReceiverDeferred","deferred","trackReceivers","getTrackReceivers","trackReceiver","find","readyState","resolve","set","_addTrackReceiver","_disconnect","error","didDisconnect","_teardownDominantSpeakerSignaling","_teardownNetworkQualityMonitor","disconnect","close","tracks","forEach","track","publishFailed","Error","_getTrackReceiver","_this2","promise","then","_getInitialTrackSwitchOffState","trackSid","initiallySwitchedOff","_log","warn","_getTrackSidsToTrackSignalings","trackSidsToTrackSignalings","participants","participant","_getOrCreateRemoteParticipant","participantState","bind","on","stateChanged","state","removeListener","revision","connectParticipant","setTrackPrioritySignaling","_getState","getState","_maybeAddBandwidthProfile","update","_localParticipant","bandwidth_profile","_publishNewLocalParticipantState","publish","_publishPeerConnectionState","peerConnectionState","peer_connections","roomState","_this3","subscribed","trackState","has","subscribedTrackSids","Set","filter","map","trackId","participantsToKeep","disconnectedParticipantRevision","add","type","handleSubscriptions","recording","published","connect","identity","media_signaling","active_speaker","_setupDataTransportBackedDominantSpeakerSignaling","label","network_quality","_setupDataTransportBackedNetworkQualityMonitor","track_priority","_setupTrackPrioritySignaling","track_switch_off","_setupTrackSwitchOffMonitor","_this4","_teardownTrackPrioritySignaling","trackPriorityPromise","kind","once","toDataTransport","concat","values","_setupTrackSwitchOff","trackSwitchOffSignaling","_this5","tracksOff","tracksOn","trackUpdates","isOn","setSwitchedOff","ex","_this6","_teardownTrackSwitchOff","trackSwitchOffPromise","_this7","dominantSpeakerSignalingPromise","dominantSpeakerSignaling","_setDominantSpeakerSignaling","_this8","networkQualityMonitorPromise","networkQualitySignaling","networkQualityMonitor","_setNetworkQualityMonitor","_this9","setDominantSpeaker","loudestParticipantSid","_this10","iceConnectionState","setNetworkQualityLevel","level","levels","remoteLevels","start","stop","getStats","_this11","responses","_ref","_ref2","response","localAudioTrackStats","filterAndAddLocalTrackSids","localVideoTrackStats","remoteAudioTrackStats","filterAndAddRemoteTrackSids","remoteVideoTrackStats","connectionState","filterAndAddTrackSids","idToSid","trackStats","reduce","trackStat","roomV2","localTrackStats","remoteTrackStats","entries","_ref3","_ref4","localParticipantUpdated","renegotiate","trackSenders","trackV2","trackTransceiver","setTrackSenders","signalingConnectionState","reconnecting","onDescription","description","dequeue","onCandidates","candidates","emit","networkQualityLevel","intervalMs","oddPublishCount","interval","setInterval","stats","report","publishEvent","audioTrackStats","peerConnectionId","videoTrackStats","activeIceCandidatePair","replaceNullsWithDefaults","onStateChanged","clearInterval","room","trackSignaling","subscribeFailed","code","message","isSubscribed","setTrackTransceiver","availableIncomingBitrate","availableOutgoingBitrate","bytesReceived","bytesSent","consentRequestsSent","currentRoundTripTime","lastPacketReceivedTimestamp","lastPacketSentTimestamp","nominated","priority","readable","requestsReceived","requestsSent","responsesReceived","responsesSent","retransmissionsReceived","retransmissionsSent","totalRoundTripTime","transportId","localCandidate","candidateType","deleted","ip","port","protocol","relayProtocol","url","remoteCandidate","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\nvar RecordingV2 = require('./recording');\nvar RoomSignaling = require('../room');\nvar RemoteParticipantV2 = require('./remoteparticipant');\nvar StatsReport = require('../../stats/statsreport');\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 10000;\n\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    Object.defineProperties(_this, {\n      _dominantSpeakerSignaling: {\n        value: null,\n        writable: true\n      },\n      _DominantSpeakerSignaling: {\n        value: options.DominantSpeakerSignaling\n      },\n      _dominantSpeakerSignalingPromise: {\n        value: null,\n        writable: true\n      },\n      _disconnectedParticipantRevisions: {\n        value: new Map()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _NetworkQualitySignaling: {\n        value: options.NetworkQualitySignaling\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityMonitorPromise: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _trackPriorityPromise: {\n        value: null,\n        writable: true\n      },\n      _trackPrioritySignaling: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffPromise: {\n        value: null,\n        writable: true\n      },\n      _trackSwitchOffSignaling: {\n        value: null,\n        writable: true\n      },\n      _TrackPrioritySignaling: {\n        value: options.TrackPrioritySignaling\n      },\n      _TrackSwitchOffSignaling: {\n        value: options.TrackSwitchOffSignaling\n      },\n      _pendingSwitchOffStates: {\n        value: new Map()\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n    return _this;\n  }\n\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers();\n\n      // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n      if (didDisconnect) {\n        this._teardownDominantSpeakerSignaling();\n        this._teardownNetworkQualityMonitor();\n        this._transport.disconnect();\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n\n      return didDisconnect;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n        return trackReceiver;\n      });\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getInitialTrackSwitchOffState',\n    value: function _getInitialTrackSwitchOffState(trackSid) {\n      var initiallySwitchedOff = this._pendingSwitchOffStates.get(trackSid) || false;\n      this._pendingSwitchOffStates.delete(trackSid);\n      if (initiallySwitchedOff) {\n        this._log.warn('[' + trackSid + '] was initially switched off! ');\n      }\n      return initiallySwitchedOff;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, this._getTrackReceiver.bind(this), this._getInitialTrackSwitchOffState.bind(this));\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n            self._disconnectedParticipantRevisions.set(participant.sid, participant.revision);\n          }\n        });\n        this.connectParticipant(participant);\n        participant.setTrackPrioritySignaling(this._trackPrioritySignaling);\n      }\n      return participant;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this3 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this3._subscriptionFailures.delete(trackState.sid);\n            _this3._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this3._subscriptionFailures.has(trackState.sid)) {\n            _this3._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this3._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set();\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this3.localParticipant.sid) {\n          return;\n        }\n\n        // NOTE(mmalavalli): If the incoming revision for a disconnected Participant is less than or\n        // equal to the revision when it was disconnected, then the state is old and can be ignored.\n        // Otherwise, the Participant was most likely disconnected in a Large Group Room when it\n        // stopped publishing media, and hence needs to be re-added.\n        var disconnectedParticipantRevision = _this3._disconnectedParticipantRevisions.get(participantState.sid);\n        if (disconnectedParticipantRevision && participantState.revision <= disconnectedParticipantRevision) {\n          return;\n        }\n\n        if (disconnectedParticipantRevision) {\n          _this3._disconnectedParticipantRevisions.delete(participantState.sid);\n        }\n        var participant = _this3._getOrCreateRemoteParticipant(participantState);\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      /* eslint camelcase:0 */\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this3._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      if (!this._dominantSpeakerSignalingPromise && roomState.media_signaling && roomState.media_signaling.active_speaker && roomState.media_signaling.active_speaker.transport && roomState.media_signaling.active_speaker.transport.type === 'data-channel') {\n        this._setupDataTransportBackedDominantSpeakerSignaling(roomState.media_signaling.active_speaker.transport.label);\n      }\n\n      if (!this._networkQualityMonitorPromise && roomState.media_signaling && roomState.media_signaling.network_quality && roomState.media_signaling.network_quality.transport && roomState.media_signaling.network_quality.transport.type === 'data-channel') {\n        this._setupDataTransportBackedNetworkQualityMonitor(roomState.media_signaling.network_quality.transport.label);\n      }\n\n      if (!this._trackPriorityPromise && roomState.media_signaling && roomState.media_signaling.track_priority && roomState.media_signaling.track_priority.transport && roomState.media_signaling.track_priority.transport.type === 'data-channel') {\n        this._setupTrackPrioritySignaling(roomState.media_signaling.track_priority.transport.label);\n      }\n\n      if (!this._trackSwitchOffPromise && roomState.media_signaling && roomState.media_signaling.track_switch_off && roomState.media_signaling.track_switch_off.transport && roomState.media_signaling.track_switch_off.transport.type === 'data-channel') {\n        this._setupTrackSwitchOffMonitor(roomState.media_signaling.track_switch_off.transport.label);\n      }\n\n      return this;\n    }\n\n    // track priority signaling MSP is now used only for subscribe side priority changes.\n    // publisher side priority changes and notifications are handled by RSP.\n\n  }, {\n    key: '_setupTrackPrioritySignaling',\n    value: function _setupTrackPrioritySignaling(id) {\n      var _this4 = this;\n\n      this._teardownTrackPrioritySignaling();\n      var trackPriorityPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this4._trackPriorityPromise !== trackPriorityPromise) {\n          return;\n        }\n\n        // NOTE(mmalavalli): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Track Priority updates.\n        receiver.once('close', function () {\n          return _this4._teardownTrackPrioritySignaling();\n        });\n\n        _this4._trackPrioritySignaling = new _this4._TrackPrioritySignaling(receiver.toDataTransport());\n        [].concat(_toConsumableArray(_this4.participants.values())).forEach(function (participant) {\n          participant.setTrackPrioritySignaling(_this4._trackPrioritySignaling);\n        });\n      });\n      this._trackPriorityPromise = trackPriorityPromise;\n    }\n  }, {\n    key: '_setupTrackSwitchOff',\n    value: function _setupTrackSwitchOff(trackSwitchOffSignaling) {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling = trackSwitchOffSignaling;\n      trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        try {\n          _this5._log.warn('trackSwitchOff: On: ', tracksOn, ' Off: ', tracksOff);\n          var trackUpdates = new Map();\n          tracksOn.forEach(function (trackSid) {\n            return trackUpdates.set(trackSid, true);\n          });\n          tracksOff.forEach(function (trackSid) {\n            if (trackUpdates.get(trackSid)) {\n              // NOTE(mpatwardhan): This means that VIDEO-3762 has been reproduced.\n              _this5._log.warn(trackSid + ' is DUPLICATED in both tracksOff and tracksOn list');\n            }\n            trackUpdates.set(trackSid, false);\n          });\n          _this5.participants.forEach(function (participant) {\n            participant.tracks.forEach(function (track) {\n              var isOn = trackUpdates.get(track.sid);\n              if (typeof isOn !== 'undefined') {\n                track.setSwitchedOff(!isOn);\n                trackUpdates.delete(track.sid);\n              }\n            });\n          });\n\n          // NOTE(mpatwardhan): Cache any notification about the tracks that we do not yet know about.\n          trackUpdates.forEach(function (isOn, trackSid) {\n            return _this5._pendingSwitchOffStates.set(trackSid, !isOn);\n          });\n        } catch (ex) {\n          _this5._log.error('error processing track switch off:', ex);\n        }\n      });\n    }\n  }, {\n    key: '_setupTrackSwitchOffMonitor',\n    value: function _setupTrackSwitchOffMonitor(id) {\n      var _this6 = this;\n\n      this._teardownTrackSwitchOff();\n      var trackSwitchOffPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this6._trackSwitchOffPromise !== trackSwitchOffPromise) {\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this6._teardownTrackSwitchOff();\n        });\n\n        var trackSwitchOffSignaling = new _this6._TrackSwitchOffSignaling(receiver.toDataTransport());\n        _this6._setupTrackSwitchOff(trackSwitchOffSignaling);\n      });\n      this._trackSwitchOffPromise = trackSwitchOffPromise;\n    }\n\n    /**\n     * Create a {@link DataTransport}-backed {@link DominantSpeakerSignaling}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link DominantSpeakerSignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedDominantSpeakerSignaling',\n    value: function _setupDataTransportBackedDominantSpeakerSignaling(id) {\n      var _this7 = this;\n\n      this._teardownDominantSpeakerSignaling();\n      var dominantSpeakerSignalingPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this7._dominantSpeakerSignalingPromise !== dominantSpeakerSignalingPromise) {\n          // NOTE(mroberts): _teardownDominantSpeakerSignaling was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and a new RTCDataChannel is created in order\n        // to resume sending Dominant Speaker updates.\n        receiver.once('close', function () {\n          return _this7._teardownDominantSpeakerSignaling();\n        });\n\n        var dominantSpeakerSignaling = new _this7._DominantSpeakerSignaling(receiver.toDataTransport());\n        _this7._setDominantSpeakerSignaling(dominantSpeakerSignaling);\n      });\n      this._dominantSpeakerSignalingPromise = dominantSpeakerSignalingPromise;\n    }\n    /**\n     * Create a {@link DataTransport}-backed {@link NetworkQualityMonitor}.\n     * @private\n     * @param {ID} id - ID of the {@link DataTrackReceiver} that will ultimately\n     *   be converted into a {@link DataTrackTransport} for use with\n     *   {@link NetworkQualitySignaling}\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_setupDataTransportBackedNetworkQualityMonitor',\n    value: function _setupDataTransportBackedNetworkQualityMonitor(id) {\n      var _this8 = this;\n\n      var self = this;\n      this._teardownNetworkQualityMonitor();\n      var networkQualityMonitorPromise = this._getTrackReceiver(id).then(function (receiver) {\n        if (receiver.kind !== 'data') {\n          throw new Error('Expected a DataTrackReceiver');\n        }if (_this8._networkQualityMonitorPromise !== networkQualityMonitorPromise) {\n          // NOTE(mroberts): _teardownNetworkQualityMonitor was called.\n          return;\n        }\n\n        // NOTE(mpatwardhan): The underlying RTCDataChannel is closed whenever\n        // the VMS instance fails over, and new a RTCDataChannel is created in order\n        // to resume exchanging Network Quality messages.\n        receiver.once('close', function () {\n          return _this8._teardownNetworkQualityMonitor();\n        });\n\n        var networkQualitySignaling = new _this8._NetworkQualitySignaling(receiver.toDataTransport(), self._networkQualityConfiguration);\n        var networkQualityMonitor = new _this8._NetworkQualityMonitor(_this8._peerConnectionManager, networkQualitySignaling);\n        _this8._setNetworkQualityMonitor(networkQualityMonitor);\n      });\n      this._networkQualityMonitorPromise = networkQualityMonitorPromise;\n    }\n  }, {\n    key: '_setDominantSpeakerSignaling',\n    value: function _setDominantSpeakerSignaling(dominantSpeakerSignaling) {\n      var _this9 = this;\n\n      this._dominantSpeakerSignaling = dominantSpeakerSignaling;\n      dominantSpeakerSignaling.on('updated', function () {\n        return _this9.setDominantSpeaker(dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_setNetworkQualityMonitor',\n    value: function _setNetworkQualityMonitor(networkQualityMonitor) {\n      var _this10 = this;\n\n      this._networkQualityMonitor = networkQualityMonitor;\n      networkQualityMonitor.on('updated', function () {\n        if (_this10.iceConnectionState === 'failed') {\n          return;\n        }\n        _this10.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n        _this10.participants.forEach(function (participant) {\n          var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n          if (levels) {\n            participant.setNetworkQualityLevel(levels.level, levels);\n          }\n        });\n      });\n      networkQualityMonitor.start();\n    }\n  }, {\n    key: '_teardownDominantSpeakerSignaling',\n    value: function _teardownDominantSpeakerSignaling() {\n      this._dominantSpeakerSignalingPromise = null;\n      this._dominantSpeakerSignaling = null;\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      this._networkQualityMonitorPromise = null;\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n        this._networkQualityMonitor = null;\n      }\n    }\n  }, {\n    key: '_teardownTrackPrioritySignaling',\n    value: function _teardownTrackPrioritySignaling() {\n      this._trackPrioritySignaling = null;\n      this._trackPriorityPromise = null;\n      this.localParticipant.setTrackPrioritySignaling(null);\n      this.participants.forEach(function (participant) {\n        participant.setTrackPrioritySignaling(null);\n      });\n    }\n  }, {\n    key: '_teardownTrackSwitchOff',\n    value: function _teardownTrackSwitchOff() {\n      this._trackSwitchOffSignaling = null;\n      this._trackSwitchOffPromise = null;\n    }\n\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this11 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this11, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this11, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this11, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, { trackSid: trackSid })].concat(trackStats) : trackStats;\n  }, []);\n}\n\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n      transport.removeListener('stateChanged', stateChanged);\n    }\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var oddPublishCount = false;\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      oddPublishCount = !oddPublishCount;\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add zeros to properties that do not exist.\n        var report = new StatsReport(id, response, true /* prepareForInsights */);\n\n        transport.publishEvent('quality', 'stats-report', {\n          audioTrackStats: report.remoteAudioTrackStats,\n          localAudioTrackStats: report.localAudioTrackStats,\n          localVideoTrackStats: report.localVideoTrackStats,\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats\n        });\n\n        if (oddPublishCount) {\n          // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n          // payload are assigned default values until the Insights gateway\n          // accepts null values.\n          var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n\n          transport.publishEvent('quality', 'active-ice-candidate-pair', activeIceCandidatePair);\n        }\n      });\n    }, function () {\n      // Do nothing.\n    });\n  }, intervalMs);\n\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    relayProtocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;"]},"metadata":{},"sourceType":"script"}