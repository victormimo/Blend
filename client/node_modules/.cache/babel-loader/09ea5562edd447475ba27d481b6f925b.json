{"ast":null,"code":"import { __spread, __assign } from 'tslib';\nimport { useContext, createElement } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\n/**\n * Load features via renderless components based on the provided MotionProps.\n * TODO: Look into porting this to a component-less appraoch.\n */\n\nfunction useFeatures(defaultFeatures, isStatic, visualElement, props) {\n  var plugins = useContext(MotionConfigContext); // If this is a static component, or we're rendering on the server, we don't load\n  // any feature components\n\n  if (isStatic || typeof window === \"undefined\") return null;\n\n  var allFeatures = __spread(defaultFeatures, plugins.features);\n\n  var numFeatures = allFeatures.length;\n  var features = []; // Decide which features we should render and add them to the returned array\n\n  for (var i = 0; i < numFeatures; i++) {\n    var _a = allFeatures[i],\n        shouldRender = _a.shouldRender,\n        key = _a.key,\n        getComponent = _a.getComponent;\n\n    if (shouldRender(props)) {\n      var Component = getComponent(props);\n      Component && features.push(createElement(Component, __assign({\n        key: key\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n\nexport { useFeatures };","map":{"version":3,"sources":["/Users/victor/Development/blend/client/node_modules/framer-motion/dist/es/motion/features/use-features.js"],"names":["__spread","__assign","useContext","createElement","MotionConfigContext","useFeatures","defaultFeatures","isStatic","visualElement","props","plugins","window","allFeatures","features","numFeatures","length","i","_a","shouldRender","key","getComponent","Component","push"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AACA,SAASC,mBAAT,QAAoC,mCAApC;AAEA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,eAArB,EAAsCC,QAAtC,EAAgDC,aAAhD,EAA+DC,KAA/D,EAAsE;AAClE,MAAIC,OAAO,GAAGR,UAAU,CAACE,mBAAD,CAAxB,CADkE,CAElE;AACA;;AACA,MAAIG,QAAQ,IAAI,OAAOI,MAAP,KAAkB,WAAlC,EACI,OAAO,IAAP;;AACJ,MAAIC,WAAW,GAAGZ,QAAQ,CAACM,eAAD,EAAkBI,OAAO,CAACG,QAA1B,CAA1B;;AACA,MAAIC,WAAW,GAAGF,WAAW,CAACG,MAA9B;AACA,MAAIF,QAAQ,GAAG,EAAf,CARkE,CASlE;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,QAAIC,EAAE,GAAGL,WAAW,CAACI,CAAD,CAApB;AAAA,QAAyBE,YAAY,GAAGD,EAAE,CAACC,YAA3C;AAAA,QAAyDC,GAAG,GAAGF,EAAE,CAACE,GAAlE;AAAA,QAAuEC,YAAY,GAAGH,EAAE,CAACG,YAAzF;;AACA,QAAIF,YAAY,CAACT,KAAD,CAAhB,EAAyB;AACrB,UAAIY,SAAS,GAAGD,YAAY,CAACX,KAAD,CAA5B;AACAY,MAAAA,SAAS,IACLR,QAAQ,CAACS,IAAT,CAAcnB,aAAa,CAACkB,SAAD,EAAYpB,QAAQ,CAAC;AAAEkB,QAAAA,GAAG,EAAEA;AAAP,OAAD,EAAeV,KAAf,EAAsB;AAAED,QAAAA,aAAa,EAAEA;AAAjB,OAAtB,CAApB,CAA3B,CADJ;AAEH;AACJ;;AACD,SAAOK,QAAP;AACH;;AAED,SAASR,WAAT","sourcesContent":["import { __spread, __assign } from 'tslib';\nimport { useContext, createElement } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\n\n/**\n * Load features via renderless components based on the provided MotionProps.\n * TODO: Look into porting this to a component-less appraoch.\n */\nfunction useFeatures(defaultFeatures, isStatic, visualElement, props) {\n    var plugins = useContext(MotionConfigContext);\n    // If this is a static component, or we're rendering on the server, we don't load\n    // any feature components\n    if (isStatic || typeof window === \"undefined\")\n        return null;\n    var allFeatures = __spread(defaultFeatures, plugins.features);\n    var numFeatures = allFeatures.length;\n    var features = [];\n    // Decide which features we should render and add them to the returned array\n    for (var i = 0; i < numFeatures; i++) {\n        var _a = allFeatures[i], shouldRender = _a.shouldRender, key = _a.key, getComponent = _a.getComponent;\n        if (shouldRender(props)) {\n            var Component = getComponent(props);\n            Component &&\n                features.push(createElement(Component, __assign({ key: key }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\nexport { useFeatures };\n"]},"metadata":{},"sourceType":"module"}